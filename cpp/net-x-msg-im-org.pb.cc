// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-im-org.proto

#include "net-x-msg-im-org.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class XmsgImOrgSyncSubReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgSyncSubReq>
      _instance;
} _XmsgImOrgSyncSubReq_default_instance_;
class XmsgImOrgSyncSubRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgSyncSubRsp>
      _instance;
} _XmsgImOrgSyncSubRsp_default_instance_;
class XmsgImOrgSyncPubReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgSyncPubReq>
      _instance;
} _XmsgImOrgSyncPubReq_default_instance_;
class XmsgImOrgSyncPubRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImOrgSyncPubRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgSyncPubRsp>
      _instance;
} _XmsgImOrgSyncPubRsp_default_instance_;
class XmsgImOrgChangedNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgChangedNotice>
      _instance;
} _XmsgImOrgChangedNotice_default_instance_;
class XmsgImOrgNodeChildQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgNodeChildQueryReq>
      _instance;
} _XmsgImOrgNodeChildQueryReq_default_instance_;
class XmsgImOrgNodeChildQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgNodeChildQueryRsp>
      _instance;
} _XmsgImOrgNodeChildQueryRsp_default_instance_;
class XmsgImOrgNodeDeptUsrQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgNodeDeptUsrQueryReq>
      _instance;
} _XmsgImOrgNodeDeptUsrQueryReq_default_instance_;
class XmsgImOrgNodeDeptUsrQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgNodeDeptUsrQueryRsp>
      _instance;
} _XmsgImOrgNodeDeptUsrQueryRsp_default_instance_;
class XmsgImOrgNodeQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgNodeQueryReq>
      _instance;
} _XmsgImOrgNodeQueryReq_default_instance_;
class XmsgImOrgNodeQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgNodeQueryRsp>
      _instance;
} _XmsgImOrgNodeQueryRsp_default_instance_;
class XmsgImOrgEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgEvent>
      _instance;
} _XmsgImOrgEvent_default_instance_;
class XmsgImOrgEventDeptDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgEventDept>
      _instance;
} _XmsgImOrgEventDept_default_instance_;
class XmsgImOrgEventDeptUsrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgEventDeptUsr>
      _instance;
} _XmsgImOrgEventDeptUsr_default_instance_;
class XmsgImOrgEventUsrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgEventUsr>
      _instance;
} _XmsgImOrgEventUsr_default_instance_;
class XmsgImOrgNodeInfo_KvEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgNodeInfo_KvEntry_DoNotUse>
      _instance;
} _XmsgImOrgNodeInfo_KvEntry_DoNotUse_default_instance_;
class XmsgImOrgNodeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgNodeInfo>
      _instance;
} _XmsgImOrgNodeInfo_default_instance_;
class XmsgImOrgNodeChildDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImOrgNodeChild>
      _instance;
} _XmsgImOrgNodeChild_default_instance_;
namespace protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto {
void InitDefaultsXmsgImOrgSyncSubReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImOrgSyncSubReq_default_instance_;
    new (ptr) ::XmsgImOrgSyncSubReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgSyncSubReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgSyncSubReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgSyncSubReqImpl);
}

void InitDefaultsXmsgImOrgSyncSubRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImOrgSyncSubRsp_default_instance_;
    new (ptr) ::XmsgImOrgSyncSubRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgSyncSubRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgSyncSubRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgSyncSubRspImpl);
}

void InitDefaultsXmsgImOrgSyncPubReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEvent();
  {
    void* ptr = &::_XmsgImOrgSyncPubReq_default_instance_;
    new (ptr) ::XmsgImOrgSyncPubReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgSyncPubReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgSyncPubReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgSyncPubReqImpl);
}

void InitDefaultsXmsgImOrgSyncPubRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgSyncPubRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgSyncPubRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImOrgSyncPubRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgSyncPubRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImOrgSyncPubRsp_default_instance_;
    new (ptr) ::XmsgImOrgSyncPubRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgSyncPubRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgSyncPubRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgSyncPubRspImpl);
}

void InitDefaultsXmsgImOrgChangedNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEvent();
  {
    void* ptr = &::_XmsgImOrgChangedNotice_default_instance_;
    new (ptr) ::XmsgImOrgChangedNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgChangedNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgChangedNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgChangedNoticeImpl);
}

void InitDefaultsXmsgImOrgNodeChildQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImOrgNodeChildQueryReq_default_instance_;
    new (ptr) ::XmsgImOrgNodeChildQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgNodeChildQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgNodeChildQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgNodeChildQueryReqImpl);
}

void InitDefaultsXmsgImOrgNodeChildQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeChild();
  {
    void* ptr = &::_XmsgImOrgNodeChildQueryRsp_default_instance_;
    new (ptr) ::XmsgImOrgNodeChildQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgNodeChildQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgNodeChildQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgNodeChildQueryRspImpl);
}

void InitDefaultsXmsgImOrgNodeDeptUsrQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImOrgNodeDeptUsrQueryReq_default_instance_;
    new (ptr) ::XmsgImOrgNodeDeptUsrQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgNodeDeptUsrQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgNodeDeptUsrQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgNodeDeptUsrQueryReqImpl);
}

void InitDefaultsXmsgImOrgNodeDeptUsrQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeInfo();
  {
    void* ptr = &::_XmsgImOrgNodeDeptUsrQueryRsp_default_instance_;
    new (ptr) ::XmsgImOrgNodeDeptUsrQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgNodeDeptUsrQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgNodeDeptUsrQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgNodeDeptUsrQueryRspImpl);
}

void InitDefaultsXmsgImOrgNodeQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImOrgNodeQueryReq_default_instance_;
    new (ptr) ::XmsgImOrgNodeQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgNodeQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgNodeQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgNodeQueryReqImpl);
}

void InitDefaultsXmsgImOrgNodeQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeInfo();
  {
    void* ptr = &::_XmsgImOrgNodeQueryRsp_default_instance_;
    new (ptr) ::XmsgImOrgNodeQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgNodeQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgNodeQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgNodeQueryRspImpl);
}

void InitDefaultsXmsgImOrgEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEventDept();
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEventDeptUsr();
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEventUsr();
  {
    void* ptr = &::_XmsgImOrgEvent_default_instance_;
    new (ptr) ::XmsgImOrgEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgEvent::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgEventImpl);
}

void InitDefaultsXmsgImOrgEventDeptImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeInfo();
  {
    void* ptr = &::_XmsgImOrgEventDept_default_instance_;
    new (ptr) ::XmsgImOrgEventDept();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgEventDept::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgEventDept() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgEventDeptImpl);
}

void InitDefaultsXmsgImOrgEventDeptUsrImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeInfo();
  {
    void* ptr = &::_XmsgImOrgEventDeptUsr_default_instance_;
    new (ptr) ::XmsgImOrgEventDeptUsr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgEventDeptUsr::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgEventDeptUsr() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgEventDeptUsrImpl);
}

void InitDefaultsXmsgImOrgEventUsrImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeInfo();
  {
    void* ptr = &::_XmsgImOrgEventUsr_default_instance_;
    new (ptr) ::XmsgImOrgEventUsr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgEventUsr::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgEventUsr() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgEventUsrImpl);
}

void InitDefaultsXmsgImOrgNodeInfo_KvEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImOrgNodeInfo_KvEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImOrgNodeInfo_KvEntry_DoNotUse();
  }
  ::XmsgImOrgNodeInfo_KvEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgNodeInfo_KvEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgNodeInfo_KvEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImOrgNodeInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeInfo_KvEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImOrgNodeInfo_default_instance_;
    new (ptr) ::XmsgImOrgNodeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgNodeInfo::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgNodeInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgNodeInfoImpl);
}

void InitDefaultsXmsgImOrgNodeChildImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeInfo();
  {
    void* ptr = &::_XmsgImOrgNodeChild_default_instance_;
    new (ptr) ::XmsgImOrgNodeChild();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImOrgNodeChild::InitAsDefaultInstance();
}

void InitDefaultsXmsgImOrgNodeChild() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImOrgNodeChildImpl);
}

::google::protobuf::Metadata file_level_metadata[19];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncSubReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncSubReq, ver4dept_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncSubReq, ver4deptusr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncSubReq, ver4usr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncSubRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncSubRsp, ver4deptlatest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncSubRsp, ver4deptusrlatest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncSubRsp, ver4usrlatest_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncPubReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncPubReq, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncPubRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgSyncPubRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgChangedNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgChangedNotice, event_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeChildQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeChildQueryReq, cgt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeChildQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeChildQueryRsp, child_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeDeptUsrQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeDeptUsrQueryReq, dcgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeDeptUsrQueryReq, ucgt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeDeptUsrQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeDeptUsrQueryRsp, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeDeptUsrQueryRsp, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeDeptUsrQueryRsp, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeDeptUsrQueryRsp, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeDeptUsrQueryRsp, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeDeptUsrQueryRsp, uts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeQueryReq, cgt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeQueryRsp, pgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeQueryRsp, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeQueryRsp, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeQueryRsp, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeQueryRsp, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeQueryRsp, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeQueryRsp, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeQueryRsp, uts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEvent, dept_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEvent, deptusr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEvent, usr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDept, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDept, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDept, pcgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDept, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDept, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDept, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDept, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDept, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDept, uts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDeptUsr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDeptUsr, dcgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDeptUsr, ucgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDeptUsr, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDeptUsr, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDeptUsr, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDeptUsr, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDeptUsr, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventDeptUsr, uts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventUsr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventUsr, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventUsr, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventUsr, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventUsr, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventUsr, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventUsr, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgEventUsr, uts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeInfo_KvEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeInfo_KvEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeInfo_KvEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeInfo_KvEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeInfo, kv_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeChild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeChild, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeChild, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeChild, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeChild, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeChild, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeChild, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeChild, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImOrgNodeChild, uts_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::XmsgImOrgSyncSubReq)},
  { 8, -1, sizeof(::XmsgImOrgSyncSubRsp)},
  { 16, -1, sizeof(::XmsgImOrgSyncPubReq)},
  { 22, 29, sizeof(::XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse)},
  { 31, -1, sizeof(::XmsgImOrgSyncPubRsp)},
  { 37, -1, sizeof(::XmsgImOrgChangedNotice)},
  { 43, -1, sizeof(::XmsgImOrgNodeChildQueryReq)},
  { 49, -1, sizeof(::XmsgImOrgNodeChildQueryRsp)},
  { 55, -1, sizeof(::XmsgImOrgNodeDeptUsrQueryReq)},
  { 62, -1, sizeof(::XmsgImOrgNodeDeptUsrQueryRsp)},
  { 73, -1, sizeof(::XmsgImOrgNodeQueryReq)},
  { 79, -1, sizeof(::XmsgImOrgNodeQueryRsp)},
  { 92, -1, sizeof(::XmsgImOrgEvent)},
  { 100, -1, sizeof(::XmsgImOrgEventDept)},
  { 113, -1, sizeof(::XmsgImOrgEventDeptUsr)},
  { 126, -1, sizeof(::XmsgImOrgEventUsr)},
  { 138, 145, sizeof(::XmsgImOrgNodeInfo_KvEntry_DoNotUse)},
  { 147, -1, sizeof(::XmsgImOrgNodeInfo)},
  { 153, -1, sizeof(::XmsgImOrgNodeChild)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgSyncSubReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgSyncSubRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgSyncPubReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgSyncPubRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgChangedNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgNodeChildQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgNodeChildQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgNodeDeptUsrQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgNodeDeptUsrQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgNodeQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgNodeQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgEventDept_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgEventDeptUsr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgEventUsr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgNodeInfo_KvEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgNodeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImOrgNodeChild_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "net-x-msg-im-org.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 19);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026net-x-msg-im-org.proto\"M\n\023XmsgImOrgSyn"
      "cSubReq\022\020\n\010ver4dept\030\001 \001(\004\022\023\n\013ver4deptUsr"
      "\030\002 \001(\004\022\017\n\007ver4usr\030\003 \001(\004\"_\n\023XmsgImOrgSync"
      "SubRsp\022\026\n\016ver4deptLatest\030\001 \001(\004\022\031\n\021ver4de"
      "ptUsrLatest\030\002 \001(\004\022\025\n\rver4usrLatest\030\003 \001(\004"
      "\"5\n\023XmsgImOrgSyncPubReq\022\036\n\005event\030\001 \003(\0132\017"
      ".XmsgImOrgEvent\"m\n\023XmsgImOrgSyncPubRsp\022*"
      "\n\003ext\030\001 \003(\0132\035.XmsgImOrgSyncPubRsp.ExtEnt"
      "ry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
      "(\t:\0028\001\"8\n\026XmsgImOrgChangedNotice\022\036\n\005even"
      "t\030\001 \001(\0132\017.XmsgImOrgEvent\")\n\032XmsgImOrgNod"
      "eChildQueryReq\022\013\n\003cgt\030\001 \001(\t\"@\n\032XmsgImOrg"
      "NodeChildQueryRsp\022\"\n\005child\030\001 \003(\0132\023.XmsgI"
      "mOrgNodeChild\":\n\034XmsgImOrgNodeDeptUsrQue"
      "ryReq\022\014\n\004dcgt\030\001 \001(\t\022\014\n\004ucgt\030\002 \001(\t\"\205\001\n\034Xm"
      "sgImOrgNodeDeptUsrQueryRsp\022\014\n\004name\030\002 \001(\t"
      "\022\016\n\006enable\030\003 \001(\010\022 \n\004info\030\004 \001(\0132\022.XmsgImO"
      "rgNodeInfo\022\013\n\003ver\030\005 \001(\004\022\013\n\003gts\030\006 \001(\004\022\013\n\003"
      "uts\030\007 \001(\004\"$\n\025XmsgImOrgNodeQueryReq\022\013\n\003cg"
      "t\030\001 \001(\t\"\255\001\n\025XmsgImOrgNodeQueryRsp\022\013\n\003pgt"
      "\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\016\n\006enable\030\003 \001(\010\022 \n\004"
      "type\030\004 \001(\0162\022.XmsgImOrgNodeType\022 \n\004info\030\005"
      " \001(\0132\022.XmsgImOrgNodeInfo\022\013\n\003ver\030\006 \001(\004\022\013\n"
      "\003gts\030\007 \001(\004\022\013\n\003uts\030\010 \001(\004\"}\n\016XmsgImOrgEven"
      "t\022!\n\004dept\030\001 \001(\0132\023.XmsgImOrgEventDept\022\'\n\007"
      "deptUsr\030\002 \001(\0132\026.XmsgImOrgEventDeptUsr\022\037\n"
      "\003usr\030\003 \001(\0132\022.XmsgImOrgEventUsr\"\226\001\n\022XmsgI"
      "mOrgEventDept\022\013\n\003cgt\030\001 \001(\t\022\014\n\004pcgt\030\002 \001(\t"
      "\022\014\n\004name\030\003 \001(\t\022\016\n\006enable\030\004 \001(\010\022 \n\004info\030\005"
      " \001(\0132\022.XmsgImOrgNodeInfo\022\013\n\003ver\030\006 \001(\004\022\013\n"
      "\003gts\030\007 \001(\004\022\013\n\003uts\030\010 \001(\004\"\232\001\n\025XmsgImOrgEve"
      "ntDeptUsr\022\014\n\004dcgt\030\001 \001(\t\022\014\n\004ucgt\030\002 \001(\t\022\014\n"
      "\004name\030\003 \001(\t\022\016\n\006enable\030\004 \001(\010\022 \n\004info\030\005 \001("
      "\0132\022.XmsgImOrgNodeInfo\022\013\n\003ver\030\006 \001(\004\022\013\n\003gt"
      "s\030\007 \001(\004\022\013\n\003uts\030\010 \001(\004\"\207\001\n\021XmsgImOrgEventU"
      "sr\022\013\n\003cgt\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\016\n\006enable\030"
      "\003 \001(\010\022 \n\004info\030\004 \001(\0132\022.XmsgImOrgNodeInfo\022"
      "\013\n\003ver\030\005 \001(\004\022\013\n\003gts\030\006 \001(\004\022\013\n\003uts\030\007 \001(\004\"f"
      "\n\021XmsgImOrgNodeInfo\022&\n\002kv\030\001 \003(\0132\032.XmsgIm"
      "OrgNodeInfo.KvEntry\032)\n\007KvEntry\022\013\n\003key\030\001 "
      "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\252\001\n\022XmsgImOrgNode"
      "Child\022\013\n\003cgt\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\016\n\006enab"
      "le\030\003 \001(\010\022 \n\004type\030\004 \001(\0162\022.XmsgImOrgNodeTy"
      "pe\022 \n\004info\030\005 \001(\0132\022.XmsgImOrgNodeInfo\022\013\n\003"
      "ver\030\006 \001(\004\022\013\n\003gts\030\007 \001(\004\022\013\n\003uts\030\010 \001(\004*\177\n\021X"
      "msgImOrgNodeType\022&\n\"X_MSG_IM_ORG_NODE_TY"
      "PE__RESERVED__\020\000\022!\n\035X_MSG_IM_ORG_NODE_TY"
      "PE_BRANCH\020\001\022\037\n\033X_MSG_IM_ORG_NODE_TYPE_LE"
      "AF\020\002B\027\n\010x.msg.pbB\013XmsgImOrgPbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1957);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net-x-msg-im-org.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto
const ::google::protobuf::EnumDescriptor* XmsgImOrgNodeType_descriptor() {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_enum_descriptors[0];
}
bool XmsgImOrgNodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void XmsgImOrgSyncSubReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgSyncSubReq::kVer4DeptFieldNumber;
const int XmsgImOrgSyncSubReq::kVer4DeptUsrFieldNumber;
const int XmsgImOrgSyncSubReq::kVer4UsrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgSyncSubReq::XmsgImOrgSyncSubReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgSyncSubReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgSyncSubReq)
}
XmsgImOrgSyncSubReq::XmsgImOrgSyncSubReq(const XmsgImOrgSyncSubReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ver4dept_, &from.ver4dept_,
    static_cast<size_t>(reinterpret_cast<char*>(&ver4usr_) -
    reinterpret_cast<char*>(&ver4dept_)) + sizeof(ver4usr_));
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgSyncSubReq)
}

void XmsgImOrgSyncSubReq::SharedCtor() {
  ::memset(&ver4dept_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ver4usr_) -
      reinterpret_cast<char*>(&ver4dept_)) + sizeof(ver4usr_));
  _cached_size_ = 0;
}

XmsgImOrgSyncSubReq::~XmsgImOrgSyncSubReq() {
  // @@protoc_insertion_point(destructor:XmsgImOrgSyncSubReq)
  SharedDtor();
}

void XmsgImOrgSyncSubReq::SharedDtor() {
}

void XmsgImOrgSyncSubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgSyncSubReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgSyncSubReq& XmsgImOrgSyncSubReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgSyncSubReq();
  return *internal_default_instance();
}

XmsgImOrgSyncSubReq* XmsgImOrgSyncSubReq::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgSyncSubReq* n = new XmsgImOrgSyncSubReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgSyncSubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgSyncSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ver4dept_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ver4usr_) -
      reinterpret_cast<char*>(&ver4dept_)) + sizeof(ver4usr_));
  _internal_metadata_.Clear();
}

bool XmsgImOrgSyncSubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgSyncSubReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ver4dept = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver4dept_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver4deptUsr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver4deptusr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver4usr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver4usr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgSyncSubReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgSyncSubReq)
  return false;
#undef DO_
}

void XmsgImOrgSyncSubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgSyncSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ver4dept = 1;
  if (this->ver4dept() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ver4dept(), output);
  }

  // uint64 ver4deptUsr = 2;
  if (this->ver4deptusr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ver4deptusr(), output);
  }

  // uint64 ver4usr = 3;
  if (this->ver4usr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->ver4usr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgSyncSubReq)
}

::google::protobuf::uint8* XmsgImOrgSyncSubReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgSyncSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ver4dept = 1;
  if (this->ver4dept() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ver4dept(), target);
  }

  // uint64 ver4deptUsr = 2;
  if (this->ver4deptusr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ver4deptusr(), target);
  }

  // uint64 ver4usr = 3;
  if (this->ver4usr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->ver4usr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgSyncSubReq)
  return target;
}

size_t XmsgImOrgSyncSubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgSyncSubReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 ver4dept = 1;
  if (this->ver4dept() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver4dept());
  }

  // uint64 ver4deptUsr = 2;
  if (this->ver4deptusr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver4deptusr());
  }

  // uint64 ver4usr = 3;
  if (this->ver4usr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver4usr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgSyncSubReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgSyncSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgSyncSubReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgSyncSubReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgSyncSubReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgSyncSubReq)
    MergeFrom(*source);
  }
}

void XmsgImOrgSyncSubReq::MergeFrom(const XmsgImOrgSyncSubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgSyncSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ver4dept() != 0) {
    set_ver4dept(from.ver4dept());
  }
  if (from.ver4deptusr() != 0) {
    set_ver4deptusr(from.ver4deptusr());
  }
  if (from.ver4usr() != 0) {
    set_ver4usr(from.ver4usr());
  }
}

void XmsgImOrgSyncSubReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgSyncSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgSyncSubReq::CopyFrom(const XmsgImOrgSyncSubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgSyncSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgSyncSubReq::IsInitialized() const {
  return true;
}

void XmsgImOrgSyncSubReq::Swap(XmsgImOrgSyncSubReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgSyncSubReq::InternalSwap(XmsgImOrgSyncSubReq* other) {
  using std::swap;
  swap(ver4dept_, other->ver4dept_);
  swap(ver4deptusr_, other->ver4deptusr_);
  swap(ver4usr_, other->ver4usr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgSyncSubReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImOrgSyncSubRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgSyncSubRsp::kVer4DeptLatestFieldNumber;
const int XmsgImOrgSyncSubRsp::kVer4DeptUsrLatestFieldNumber;
const int XmsgImOrgSyncSubRsp::kVer4UsrLatestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgSyncSubRsp::XmsgImOrgSyncSubRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgSyncSubRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgSyncSubRsp)
}
XmsgImOrgSyncSubRsp::XmsgImOrgSyncSubRsp(const XmsgImOrgSyncSubRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ver4deptlatest_, &from.ver4deptlatest_,
    static_cast<size_t>(reinterpret_cast<char*>(&ver4usrlatest_) -
    reinterpret_cast<char*>(&ver4deptlatest_)) + sizeof(ver4usrlatest_));
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgSyncSubRsp)
}

void XmsgImOrgSyncSubRsp::SharedCtor() {
  ::memset(&ver4deptlatest_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ver4usrlatest_) -
      reinterpret_cast<char*>(&ver4deptlatest_)) + sizeof(ver4usrlatest_));
  _cached_size_ = 0;
}

XmsgImOrgSyncSubRsp::~XmsgImOrgSyncSubRsp() {
  // @@protoc_insertion_point(destructor:XmsgImOrgSyncSubRsp)
  SharedDtor();
}

void XmsgImOrgSyncSubRsp::SharedDtor() {
}

void XmsgImOrgSyncSubRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgSyncSubRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgSyncSubRsp& XmsgImOrgSyncSubRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgSyncSubRsp();
  return *internal_default_instance();
}

XmsgImOrgSyncSubRsp* XmsgImOrgSyncSubRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgSyncSubRsp* n = new XmsgImOrgSyncSubRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgSyncSubRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgSyncSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ver4deptlatest_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ver4usrlatest_) -
      reinterpret_cast<char*>(&ver4deptlatest_)) + sizeof(ver4usrlatest_));
  _internal_metadata_.Clear();
}

bool XmsgImOrgSyncSubRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgSyncSubRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ver4deptLatest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver4deptlatest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver4deptUsrLatest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver4deptusrlatest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver4usrLatest = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver4usrlatest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgSyncSubRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgSyncSubRsp)
  return false;
#undef DO_
}

void XmsgImOrgSyncSubRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgSyncSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ver4deptLatest = 1;
  if (this->ver4deptlatest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ver4deptlatest(), output);
  }

  // uint64 ver4deptUsrLatest = 2;
  if (this->ver4deptusrlatest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ver4deptusrlatest(), output);
  }

  // uint64 ver4usrLatest = 3;
  if (this->ver4usrlatest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->ver4usrlatest(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgSyncSubRsp)
}

::google::protobuf::uint8* XmsgImOrgSyncSubRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgSyncSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ver4deptLatest = 1;
  if (this->ver4deptlatest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ver4deptlatest(), target);
  }

  // uint64 ver4deptUsrLatest = 2;
  if (this->ver4deptusrlatest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ver4deptusrlatest(), target);
  }

  // uint64 ver4usrLatest = 3;
  if (this->ver4usrlatest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->ver4usrlatest(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgSyncSubRsp)
  return target;
}

size_t XmsgImOrgSyncSubRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgSyncSubRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 ver4deptLatest = 1;
  if (this->ver4deptlatest() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver4deptlatest());
  }

  // uint64 ver4deptUsrLatest = 2;
  if (this->ver4deptusrlatest() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver4deptusrlatest());
  }

  // uint64 ver4usrLatest = 3;
  if (this->ver4usrlatest() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver4usrlatest());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgSyncSubRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgSyncSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgSyncSubRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgSyncSubRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgSyncSubRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgSyncSubRsp)
    MergeFrom(*source);
  }
}

void XmsgImOrgSyncSubRsp::MergeFrom(const XmsgImOrgSyncSubRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgSyncSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ver4deptlatest() != 0) {
    set_ver4deptlatest(from.ver4deptlatest());
  }
  if (from.ver4deptusrlatest() != 0) {
    set_ver4deptusrlatest(from.ver4deptusrlatest());
  }
  if (from.ver4usrlatest() != 0) {
    set_ver4usrlatest(from.ver4usrlatest());
  }
}

void XmsgImOrgSyncSubRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgSyncSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgSyncSubRsp::CopyFrom(const XmsgImOrgSyncSubRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgSyncSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgSyncSubRsp::IsInitialized() const {
  return true;
}

void XmsgImOrgSyncSubRsp::Swap(XmsgImOrgSyncSubRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgSyncSubRsp::InternalSwap(XmsgImOrgSyncSubRsp* other) {
  using std::swap;
  swap(ver4deptlatest_, other->ver4deptlatest_);
  swap(ver4deptusrlatest_, other->ver4deptusrlatest_);
  swap(ver4usrlatest_, other->ver4usrlatest_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgSyncSubRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImOrgSyncPubReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgSyncPubReq::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgSyncPubReq::XmsgImOrgSyncPubReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgSyncPubReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgSyncPubReq)
}
XmsgImOrgSyncPubReq::XmsgImOrgSyncPubReq(const XmsgImOrgSyncPubReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      event_(from.event_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgSyncPubReq)
}

void XmsgImOrgSyncPubReq::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImOrgSyncPubReq::~XmsgImOrgSyncPubReq() {
  // @@protoc_insertion_point(destructor:XmsgImOrgSyncPubReq)
  SharedDtor();
}

void XmsgImOrgSyncPubReq::SharedDtor() {
}

void XmsgImOrgSyncPubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgSyncPubReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgSyncPubReq& XmsgImOrgSyncPubReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgSyncPubReq();
  return *internal_default_instance();
}

XmsgImOrgSyncPubReq* XmsgImOrgSyncPubReq::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgSyncPubReq* n = new XmsgImOrgSyncPubReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgSyncPubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgSyncPubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImOrgSyncPubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgSyncPubReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .XmsgImOrgEvent event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgSyncPubReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgSyncPubReq)
  return false;
#undef DO_
}

void XmsgImOrgSyncPubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgSyncPubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImOrgEvent event = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->event(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgSyncPubReq)
}

::google::protobuf::uint8* XmsgImOrgSyncPubReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgSyncPubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImOrgEvent event = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->event(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgSyncPubReq)
  return target;
}

size_t XmsgImOrgSyncPubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgSyncPubReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgImOrgEvent event = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->event_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->event(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgSyncPubReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgSyncPubReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgSyncPubReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgSyncPubReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgSyncPubReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgSyncPubReq)
    MergeFrom(*source);
  }
}

void XmsgImOrgSyncPubReq::MergeFrom(const XmsgImOrgSyncPubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgSyncPubReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  event_.MergeFrom(from.event_);
}

void XmsgImOrgSyncPubReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgSyncPubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgSyncPubReq::CopyFrom(const XmsgImOrgSyncPubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgSyncPubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgSyncPubReq::IsInitialized() const {
  return true;
}

void XmsgImOrgSyncPubReq::Swap(XmsgImOrgSyncPubReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgSyncPubReq::InternalSwap(XmsgImOrgSyncPubReq* other) {
  using std::swap;
  event_.InternalSwap(&other->event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgSyncPubReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse::XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse() {}
XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse::XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[3];
}
void XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImOrgSyncPubRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgSyncPubRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgSyncPubRsp::XmsgImOrgSyncPubRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgSyncPubRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgSyncPubRsp)
}
XmsgImOrgSyncPubRsp::XmsgImOrgSyncPubRsp(const XmsgImOrgSyncPubRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgSyncPubRsp)
}

void XmsgImOrgSyncPubRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImOrgSyncPubRsp::~XmsgImOrgSyncPubRsp() {
  // @@protoc_insertion_point(destructor:XmsgImOrgSyncPubRsp)
  SharedDtor();
}

void XmsgImOrgSyncPubRsp::SharedDtor() {
}

void XmsgImOrgSyncPubRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgSyncPubRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgSyncPubRsp& XmsgImOrgSyncPubRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgSyncPubRsp();
  return *internal_default_instance();
}

XmsgImOrgSyncPubRsp* XmsgImOrgSyncPubRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgSyncPubRsp* n = new XmsgImOrgSyncPubRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgSyncPubRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgSyncPubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImOrgSyncPubRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgSyncPubRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgSyncPubRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgSyncPubRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgSyncPubRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgSyncPubRsp)
  return false;
#undef DO_
}

void XmsgImOrgSyncPubRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgSyncPubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImOrgSyncPubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImOrgSyncPubRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgSyncPubRsp)
}

::google::protobuf::uint8* XmsgImOrgSyncPubRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgSyncPubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImOrgSyncPubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImOrgSyncPubRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgSyncPubRsp)
  return target;
}

size_t XmsgImOrgSyncPubRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgSyncPubRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgSyncPubRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgSyncPubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgSyncPubRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgSyncPubRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgSyncPubRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgSyncPubRsp)
    MergeFrom(*source);
  }
}

void XmsgImOrgSyncPubRsp::MergeFrom(const XmsgImOrgSyncPubRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgSyncPubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImOrgSyncPubRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgSyncPubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgSyncPubRsp::CopyFrom(const XmsgImOrgSyncPubRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgSyncPubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgSyncPubRsp::IsInitialized() const {
  return true;
}

void XmsgImOrgSyncPubRsp::Swap(XmsgImOrgSyncPubRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgSyncPubRsp::InternalSwap(XmsgImOrgSyncPubRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgSyncPubRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImOrgChangedNotice::InitAsDefaultInstance() {
  ::_XmsgImOrgChangedNotice_default_instance_._instance.get_mutable()->event_ = const_cast< ::XmsgImOrgEvent*>(
      ::XmsgImOrgEvent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgChangedNotice::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgChangedNotice::XmsgImOrgChangedNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgChangedNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgChangedNotice)
}
XmsgImOrgChangedNotice::XmsgImOrgChangedNotice(const XmsgImOrgChangedNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_event()) {
    event_ = new ::XmsgImOrgEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgChangedNotice)
}

void XmsgImOrgChangedNotice::SharedCtor() {
  event_ = NULL;
  _cached_size_ = 0;
}

XmsgImOrgChangedNotice::~XmsgImOrgChangedNotice() {
  // @@protoc_insertion_point(destructor:XmsgImOrgChangedNotice)
  SharedDtor();
}

void XmsgImOrgChangedNotice::SharedDtor() {
  if (this != internal_default_instance()) delete event_;
}

void XmsgImOrgChangedNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgChangedNotice::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgChangedNotice& XmsgImOrgChangedNotice::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgChangedNotice();
  return *internal_default_instance();
}

XmsgImOrgChangedNotice* XmsgImOrgChangedNotice::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgChangedNotice* n = new XmsgImOrgChangedNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgChangedNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgChangedNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
  _internal_metadata_.Clear();
}

bool XmsgImOrgChangedNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgChangedNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .XmsgImOrgEvent event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgChangedNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgChangedNotice)
  return false;
#undef DO_
}

void XmsgImOrgChangedNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgChangedNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XmsgImOrgEvent event = 1;
  if (this->has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->event_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgChangedNotice)
}

::google::protobuf::uint8* XmsgImOrgChangedNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgChangedNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XmsgImOrgEvent event = 1;
  if (this->has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->event_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgChangedNotice)
  return target;
}

size_t XmsgImOrgChangedNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgChangedNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .XmsgImOrgEvent event = 1;
  if (this->has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->event_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgChangedNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgChangedNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgChangedNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgChangedNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgChangedNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgChangedNotice)
    MergeFrom(*source);
  }
}

void XmsgImOrgChangedNotice::MergeFrom(const XmsgImOrgChangedNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgChangedNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_event()) {
    mutable_event()->::XmsgImOrgEvent::MergeFrom(from.event());
  }
}

void XmsgImOrgChangedNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgChangedNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgChangedNotice::CopyFrom(const XmsgImOrgChangedNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgChangedNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgChangedNotice::IsInitialized() const {
  return true;
}

void XmsgImOrgChangedNotice::Swap(XmsgImOrgChangedNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgChangedNotice::InternalSwap(XmsgImOrgChangedNotice* other) {
  using std::swap;
  swap(event_, other->event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgChangedNotice::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImOrgNodeChildQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgNodeChildQueryReq::kCgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgNodeChildQueryReq::XmsgImOrgNodeChildQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeChildQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgNodeChildQueryReq)
}
XmsgImOrgNodeChildQueryReq::XmsgImOrgNodeChildQueryReq(const XmsgImOrgNodeChildQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgNodeChildQueryReq)
}

void XmsgImOrgNodeChildQueryReq::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImOrgNodeChildQueryReq::~XmsgImOrgNodeChildQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgImOrgNodeChildQueryReq)
  SharedDtor();
}

void XmsgImOrgNodeChildQueryReq::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImOrgNodeChildQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgNodeChildQueryReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgNodeChildQueryReq& XmsgImOrgNodeChildQueryReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeChildQueryReq();
  return *internal_default_instance();
}

XmsgImOrgNodeChildQueryReq* XmsgImOrgNodeChildQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgNodeChildQueryReq* n = new XmsgImOrgNodeChildQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgNodeChildQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgNodeChildQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImOrgNodeChildQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgNodeChildQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgNodeChildQueryReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgNodeChildQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgNodeChildQueryReq)
  return false;
#undef DO_
}

void XmsgImOrgNodeChildQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgNodeChildQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeChildQueryReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgNodeChildQueryReq)
}

::google::protobuf::uint8* XmsgImOrgNodeChildQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgNodeChildQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeChildQueryReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgNodeChildQueryReq)
  return target;
}

size_t XmsgImOrgNodeChildQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgNodeChildQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgNodeChildQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgNodeChildQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgNodeChildQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgNodeChildQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgNodeChildQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgNodeChildQueryReq)
    MergeFrom(*source);
  }
}

void XmsgImOrgNodeChildQueryReq::MergeFrom(const XmsgImOrgNodeChildQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgNodeChildQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImOrgNodeChildQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgNodeChildQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgNodeChildQueryReq::CopyFrom(const XmsgImOrgNodeChildQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgNodeChildQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgNodeChildQueryReq::IsInitialized() const {
  return true;
}

void XmsgImOrgNodeChildQueryReq::Swap(XmsgImOrgNodeChildQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgNodeChildQueryReq::InternalSwap(XmsgImOrgNodeChildQueryReq* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgNodeChildQueryReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImOrgNodeChildQueryRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgNodeChildQueryRsp::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgNodeChildQueryRsp::XmsgImOrgNodeChildQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeChildQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgNodeChildQueryRsp)
}
XmsgImOrgNodeChildQueryRsp::XmsgImOrgNodeChildQueryRsp(const XmsgImOrgNodeChildQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      child_(from.child_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgNodeChildQueryRsp)
}

void XmsgImOrgNodeChildQueryRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImOrgNodeChildQueryRsp::~XmsgImOrgNodeChildQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgImOrgNodeChildQueryRsp)
  SharedDtor();
}

void XmsgImOrgNodeChildQueryRsp::SharedDtor() {
}

void XmsgImOrgNodeChildQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgNodeChildQueryRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgNodeChildQueryRsp& XmsgImOrgNodeChildQueryRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeChildQueryRsp();
  return *internal_default_instance();
}

XmsgImOrgNodeChildQueryRsp* XmsgImOrgNodeChildQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgNodeChildQueryRsp* n = new XmsgImOrgNodeChildQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgNodeChildQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgNodeChildQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  child_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImOrgNodeChildQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgNodeChildQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .XmsgImOrgNodeChild child = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgNodeChildQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgNodeChildQueryRsp)
  return false;
#undef DO_
}

void XmsgImOrgNodeChildQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgNodeChildQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImOrgNodeChild child = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->child(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgNodeChildQueryRsp)
}

::google::protobuf::uint8* XmsgImOrgNodeChildQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgNodeChildQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImOrgNodeChild child = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->child(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgNodeChildQueryRsp)
  return target;
}

size_t XmsgImOrgNodeChildQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgNodeChildQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgImOrgNodeChild child = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->child_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->child(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgNodeChildQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgNodeChildQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgNodeChildQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgNodeChildQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgNodeChildQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgNodeChildQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgImOrgNodeChildQueryRsp::MergeFrom(const XmsgImOrgNodeChildQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgNodeChildQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  child_.MergeFrom(from.child_);
}

void XmsgImOrgNodeChildQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgNodeChildQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgNodeChildQueryRsp::CopyFrom(const XmsgImOrgNodeChildQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgNodeChildQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgNodeChildQueryRsp::IsInitialized() const {
  return true;
}

void XmsgImOrgNodeChildQueryRsp::Swap(XmsgImOrgNodeChildQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgNodeChildQueryRsp::InternalSwap(XmsgImOrgNodeChildQueryRsp* other) {
  using std::swap;
  child_.InternalSwap(&other->child_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgNodeChildQueryRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImOrgNodeDeptUsrQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgNodeDeptUsrQueryReq::kDcgtFieldNumber;
const int XmsgImOrgNodeDeptUsrQueryReq::kUcgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgNodeDeptUsrQueryReq::XmsgImOrgNodeDeptUsrQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeDeptUsrQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgNodeDeptUsrQueryReq)
}
XmsgImOrgNodeDeptUsrQueryReq::XmsgImOrgNodeDeptUsrQueryReq(const XmsgImOrgNodeDeptUsrQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dcgt().size() > 0) {
    dcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dcgt_);
  }
  ucgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ucgt().size() > 0) {
    ucgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ucgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgNodeDeptUsrQueryReq)
}

void XmsgImOrgNodeDeptUsrQueryReq::SharedCtor() {
  dcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ucgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImOrgNodeDeptUsrQueryReq::~XmsgImOrgNodeDeptUsrQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgImOrgNodeDeptUsrQueryReq)
  SharedDtor();
}

void XmsgImOrgNodeDeptUsrQueryReq::SharedDtor() {
  dcgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ucgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImOrgNodeDeptUsrQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgNodeDeptUsrQueryReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgNodeDeptUsrQueryReq& XmsgImOrgNodeDeptUsrQueryReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeDeptUsrQueryReq();
  return *internal_default_instance();
}

XmsgImOrgNodeDeptUsrQueryReq* XmsgImOrgNodeDeptUsrQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgNodeDeptUsrQueryReq* n = new XmsgImOrgNodeDeptUsrQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgNodeDeptUsrQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgNodeDeptUsrQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ucgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImOrgNodeDeptUsrQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgNodeDeptUsrQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string dcgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dcgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dcgt().data(), static_cast<int>(this->dcgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgNodeDeptUsrQueryReq.dcgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ucgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ucgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ucgt().data(), static_cast<int>(this->ucgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgNodeDeptUsrQueryReq.ucgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgNodeDeptUsrQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgNodeDeptUsrQueryReq)
  return false;
#undef DO_
}

void XmsgImOrgNodeDeptUsrQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgNodeDeptUsrQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dcgt = 1;
  if (this->dcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dcgt().data(), static_cast<int>(this->dcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeDeptUsrQueryReq.dcgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dcgt(), output);
  }

  // string ucgt = 2;
  if (this->ucgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ucgt().data(), static_cast<int>(this->ucgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeDeptUsrQueryReq.ucgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ucgt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgNodeDeptUsrQueryReq)
}

::google::protobuf::uint8* XmsgImOrgNodeDeptUsrQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgNodeDeptUsrQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dcgt = 1;
  if (this->dcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dcgt().data(), static_cast<int>(this->dcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeDeptUsrQueryReq.dcgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dcgt(), target);
  }

  // string ucgt = 2;
  if (this->ucgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ucgt().data(), static_cast<int>(this->ucgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeDeptUsrQueryReq.ucgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ucgt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgNodeDeptUsrQueryReq)
  return target;
}

size_t XmsgImOrgNodeDeptUsrQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgNodeDeptUsrQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string dcgt = 1;
  if (this->dcgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dcgt());
  }

  // string ucgt = 2;
  if (this->ucgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ucgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgNodeDeptUsrQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgNodeDeptUsrQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgNodeDeptUsrQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgNodeDeptUsrQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgNodeDeptUsrQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgNodeDeptUsrQueryReq)
    MergeFrom(*source);
  }
}

void XmsgImOrgNodeDeptUsrQueryReq::MergeFrom(const XmsgImOrgNodeDeptUsrQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgNodeDeptUsrQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dcgt().size() > 0) {

    dcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dcgt_);
  }
  if (from.ucgt().size() > 0) {

    ucgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ucgt_);
  }
}

void XmsgImOrgNodeDeptUsrQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgNodeDeptUsrQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgNodeDeptUsrQueryReq::CopyFrom(const XmsgImOrgNodeDeptUsrQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgNodeDeptUsrQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgNodeDeptUsrQueryReq::IsInitialized() const {
  return true;
}

void XmsgImOrgNodeDeptUsrQueryReq::Swap(XmsgImOrgNodeDeptUsrQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgNodeDeptUsrQueryReq::InternalSwap(XmsgImOrgNodeDeptUsrQueryReq* other) {
  using std::swap;
  dcgt_.Swap(&other->dcgt_);
  ucgt_.Swap(&other->ucgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgNodeDeptUsrQueryReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImOrgNodeDeptUsrQueryRsp::InitAsDefaultInstance() {
  ::_XmsgImOrgNodeDeptUsrQueryRsp_default_instance_._instance.get_mutable()->info_ = const_cast< ::XmsgImOrgNodeInfo*>(
      ::XmsgImOrgNodeInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgNodeDeptUsrQueryRsp::kNameFieldNumber;
const int XmsgImOrgNodeDeptUsrQueryRsp::kEnableFieldNumber;
const int XmsgImOrgNodeDeptUsrQueryRsp::kInfoFieldNumber;
const int XmsgImOrgNodeDeptUsrQueryRsp::kVerFieldNumber;
const int XmsgImOrgNodeDeptUsrQueryRsp::kGtsFieldNumber;
const int XmsgImOrgNodeDeptUsrQueryRsp::kUtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgNodeDeptUsrQueryRsp::XmsgImOrgNodeDeptUsrQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeDeptUsrQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgNodeDeptUsrQueryRsp)
}
XmsgImOrgNodeDeptUsrQueryRsp::XmsgImOrgNodeDeptUsrQueryRsp(const XmsgImOrgNodeDeptUsrQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_info()) {
    info_ = new ::XmsgImOrgNodeInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&ver_, &from.ver_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_) -
    reinterpret_cast<char*>(&ver_)) + sizeof(enable_));
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgNodeDeptUsrQueryRsp)
}

void XmsgImOrgNodeDeptUsrQueryRsp::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&info_)) + sizeof(enable_));
  _cached_size_ = 0;
}

XmsgImOrgNodeDeptUsrQueryRsp::~XmsgImOrgNodeDeptUsrQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgImOrgNodeDeptUsrQueryRsp)
  SharedDtor();
}

void XmsgImOrgNodeDeptUsrQueryRsp::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
}

void XmsgImOrgNodeDeptUsrQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgNodeDeptUsrQueryRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgNodeDeptUsrQueryRsp& XmsgImOrgNodeDeptUsrQueryRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeDeptUsrQueryRsp();
  return *internal_default_instance();
}

XmsgImOrgNodeDeptUsrQueryRsp* XmsgImOrgNodeDeptUsrQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgNodeDeptUsrQueryRsp* n = new XmsgImOrgNodeDeptUsrQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgNodeDeptUsrQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgNodeDeptUsrQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(enable_));
  _internal_metadata_.Clear();
}

bool XmsgImOrgNodeDeptUsrQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgNodeDeptUsrQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgNodeDeptUsrQueryRsp.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImOrgNodeInfo info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgNodeDeptUsrQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgNodeDeptUsrQueryRsp)
  return false;
#undef DO_
}

void XmsgImOrgNodeDeptUsrQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgNodeDeptUsrQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeDeptUsrQueryRsp.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enable(), output);
  }

  // .XmsgImOrgNodeInfo info = 4;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->info_, output);
  }

  // uint64 ver = 5;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->ver(), output);
  }

  // uint64 gts = 6;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->gts(), output);
  }

  // uint64 uts = 7;
  if (this->uts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->uts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgNodeDeptUsrQueryRsp)
}

::google::protobuf::uint8* XmsgImOrgNodeDeptUsrQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgNodeDeptUsrQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeDeptUsrQueryRsp.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enable(), target);
  }

  // .XmsgImOrgNodeInfo info = 4;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->info_, deterministic, target);
  }

  // uint64 ver = 5;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->ver(), target);
  }

  // uint64 gts = 6;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->gts(), target);
  }

  // uint64 uts = 7;
  if (this->uts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->uts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgNodeDeptUsrQueryRsp)
  return target;
}

size_t XmsgImOrgNodeDeptUsrQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgNodeDeptUsrQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .XmsgImOrgNodeInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // uint64 ver = 5;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  // uint64 gts = 6;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 uts = 7;
  if (this->uts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uts());
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgNodeDeptUsrQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgNodeDeptUsrQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgNodeDeptUsrQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgNodeDeptUsrQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgNodeDeptUsrQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgNodeDeptUsrQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgImOrgNodeDeptUsrQueryRsp::MergeFrom(const XmsgImOrgNodeDeptUsrQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgNodeDeptUsrQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_info()) {
    mutable_info()->::XmsgImOrgNodeInfo::MergeFrom(from.info());
  }
  if (from.ver() != 0) {
    set_ver(from.ver());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.uts() != 0) {
    set_uts(from.uts());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
}

void XmsgImOrgNodeDeptUsrQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgNodeDeptUsrQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgNodeDeptUsrQueryRsp::CopyFrom(const XmsgImOrgNodeDeptUsrQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgNodeDeptUsrQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgNodeDeptUsrQueryRsp::IsInitialized() const {
  return true;
}

void XmsgImOrgNodeDeptUsrQueryRsp::Swap(XmsgImOrgNodeDeptUsrQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgNodeDeptUsrQueryRsp::InternalSwap(XmsgImOrgNodeDeptUsrQueryRsp* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(info_, other->info_);
  swap(ver_, other->ver_);
  swap(gts_, other->gts_);
  swap(uts_, other->uts_);
  swap(enable_, other->enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgNodeDeptUsrQueryRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImOrgNodeQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgNodeQueryReq::kCgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgNodeQueryReq::XmsgImOrgNodeQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgNodeQueryReq)
}
XmsgImOrgNodeQueryReq::XmsgImOrgNodeQueryReq(const XmsgImOrgNodeQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgNodeQueryReq)
}

void XmsgImOrgNodeQueryReq::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImOrgNodeQueryReq::~XmsgImOrgNodeQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgImOrgNodeQueryReq)
  SharedDtor();
}

void XmsgImOrgNodeQueryReq::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImOrgNodeQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgNodeQueryReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgNodeQueryReq& XmsgImOrgNodeQueryReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeQueryReq();
  return *internal_default_instance();
}

XmsgImOrgNodeQueryReq* XmsgImOrgNodeQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgNodeQueryReq* n = new XmsgImOrgNodeQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgNodeQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgNodeQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImOrgNodeQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgNodeQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgNodeQueryReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgNodeQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgNodeQueryReq)
  return false;
#undef DO_
}

void XmsgImOrgNodeQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgNodeQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeQueryReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgNodeQueryReq)
}

::google::protobuf::uint8* XmsgImOrgNodeQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgNodeQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeQueryReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgNodeQueryReq)
  return target;
}

size_t XmsgImOrgNodeQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgNodeQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgNodeQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgNodeQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgNodeQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgNodeQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgNodeQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgNodeQueryReq)
    MergeFrom(*source);
  }
}

void XmsgImOrgNodeQueryReq::MergeFrom(const XmsgImOrgNodeQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgNodeQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImOrgNodeQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgNodeQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgNodeQueryReq::CopyFrom(const XmsgImOrgNodeQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgNodeQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgNodeQueryReq::IsInitialized() const {
  return true;
}

void XmsgImOrgNodeQueryReq::Swap(XmsgImOrgNodeQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgNodeQueryReq::InternalSwap(XmsgImOrgNodeQueryReq* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgNodeQueryReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImOrgNodeQueryRsp::InitAsDefaultInstance() {
  ::_XmsgImOrgNodeQueryRsp_default_instance_._instance.get_mutable()->info_ = const_cast< ::XmsgImOrgNodeInfo*>(
      ::XmsgImOrgNodeInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgNodeQueryRsp::kPgtFieldNumber;
const int XmsgImOrgNodeQueryRsp::kNameFieldNumber;
const int XmsgImOrgNodeQueryRsp::kEnableFieldNumber;
const int XmsgImOrgNodeQueryRsp::kTypeFieldNumber;
const int XmsgImOrgNodeQueryRsp::kInfoFieldNumber;
const int XmsgImOrgNodeQueryRsp::kVerFieldNumber;
const int XmsgImOrgNodeQueryRsp::kGtsFieldNumber;
const int XmsgImOrgNodeQueryRsp::kUtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgNodeQueryRsp::XmsgImOrgNodeQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgNodeQueryRsp)
}
XmsgImOrgNodeQueryRsp::XmsgImOrgNodeQueryRsp(const XmsgImOrgNodeQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pgt().size() > 0) {
    pgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pgt_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_info()) {
    info_ = new ::XmsgImOrgNodeInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&enable_, &from.enable_,
    static_cast<size_t>(reinterpret_cast<char*>(&uts_) -
    reinterpret_cast<char*>(&enable_)) + sizeof(uts_));
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgNodeQueryRsp)
}

void XmsgImOrgNodeQueryRsp::SharedCtor() {
  pgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uts_) -
      reinterpret_cast<char*>(&info_)) + sizeof(uts_));
  _cached_size_ = 0;
}

XmsgImOrgNodeQueryRsp::~XmsgImOrgNodeQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgImOrgNodeQueryRsp)
  SharedDtor();
}

void XmsgImOrgNodeQueryRsp::SharedDtor() {
  pgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
}

void XmsgImOrgNodeQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgNodeQueryRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgNodeQueryRsp& XmsgImOrgNodeQueryRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeQueryRsp();
  return *internal_default_instance();
}

XmsgImOrgNodeQueryRsp* XmsgImOrgNodeQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgNodeQueryRsp* n = new XmsgImOrgNodeQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgNodeQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgNodeQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&enable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uts_) -
      reinterpret_cast<char*>(&enable_)) + sizeof(uts_));
  _internal_metadata_.Clear();
}

bool XmsgImOrgNodeQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgNodeQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pgt().data(), static_cast<int>(this->pgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgNodeQueryRsp.pgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgNodeQueryRsp.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImOrgNodeType type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::XmsgImOrgNodeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImOrgNodeInfo info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uts = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgNodeQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgNodeQueryRsp)
  return false;
#undef DO_
}

void XmsgImOrgNodeQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgNodeQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pgt = 1;
  if (this->pgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pgt().data(), static_cast<int>(this->pgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeQueryRsp.pgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pgt(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeQueryRsp.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enable(), output);
  }

  // .XmsgImOrgNodeType type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // .XmsgImOrgNodeInfo info = 5;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->info_, output);
  }

  // uint64 ver = 6;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->ver(), output);
  }

  // uint64 gts = 7;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->gts(), output);
  }

  // uint64 uts = 8;
  if (this->uts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->uts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgNodeQueryRsp)
}

::google::protobuf::uint8* XmsgImOrgNodeQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgNodeQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pgt = 1;
  if (this->pgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pgt().data(), static_cast<int>(this->pgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeQueryRsp.pgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pgt(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeQueryRsp.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enable(), target);
  }

  // .XmsgImOrgNodeType type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // .XmsgImOrgNodeInfo info = 5;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->info_, deterministic, target);
  }

  // uint64 ver = 6;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->ver(), target);
  }

  // uint64 gts = 7;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->gts(), target);
  }

  // uint64 uts = 8;
  if (this->uts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->uts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgNodeQueryRsp)
  return target;
}

size_t XmsgImOrgNodeQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgNodeQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pgt = 1;
  if (this->pgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pgt());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .XmsgImOrgNodeInfo info = 5;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  // .XmsgImOrgNodeType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint64 ver = 6;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  // uint64 gts = 7;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 uts = 8;
  if (this->uts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgNodeQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgNodeQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgNodeQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgNodeQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgNodeQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgNodeQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgImOrgNodeQueryRsp::MergeFrom(const XmsgImOrgNodeQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgNodeQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pgt().size() > 0) {

    pgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pgt_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_info()) {
    mutable_info()->::XmsgImOrgNodeInfo::MergeFrom(from.info());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.ver() != 0) {
    set_ver(from.ver());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.uts() != 0) {
    set_uts(from.uts());
  }
}

void XmsgImOrgNodeQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgNodeQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgNodeQueryRsp::CopyFrom(const XmsgImOrgNodeQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgNodeQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgNodeQueryRsp::IsInitialized() const {
  return true;
}

void XmsgImOrgNodeQueryRsp::Swap(XmsgImOrgNodeQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgNodeQueryRsp::InternalSwap(XmsgImOrgNodeQueryRsp* other) {
  using std::swap;
  pgt_.Swap(&other->pgt_);
  name_.Swap(&other->name_);
  swap(info_, other->info_);
  swap(enable_, other->enable_);
  swap(type_, other->type_);
  swap(ver_, other->ver_);
  swap(gts_, other->gts_);
  swap(uts_, other->uts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgNodeQueryRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImOrgEvent::InitAsDefaultInstance() {
  ::_XmsgImOrgEvent_default_instance_._instance.get_mutable()->dept_ = const_cast< ::XmsgImOrgEventDept*>(
      ::XmsgImOrgEventDept::internal_default_instance());
  ::_XmsgImOrgEvent_default_instance_._instance.get_mutable()->deptusr_ = const_cast< ::XmsgImOrgEventDeptUsr*>(
      ::XmsgImOrgEventDeptUsr::internal_default_instance());
  ::_XmsgImOrgEvent_default_instance_._instance.get_mutable()->usr_ = const_cast< ::XmsgImOrgEventUsr*>(
      ::XmsgImOrgEventUsr::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgEvent::kDeptFieldNumber;
const int XmsgImOrgEvent::kDeptUsrFieldNumber;
const int XmsgImOrgEvent::kUsrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgEvent::XmsgImOrgEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgEvent)
}
XmsgImOrgEvent::XmsgImOrgEvent(const XmsgImOrgEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dept()) {
    dept_ = new ::XmsgImOrgEventDept(*from.dept_);
  } else {
    dept_ = NULL;
  }
  if (from.has_deptusr()) {
    deptusr_ = new ::XmsgImOrgEventDeptUsr(*from.deptusr_);
  } else {
    deptusr_ = NULL;
  }
  if (from.has_usr()) {
    usr_ = new ::XmsgImOrgEventUsr(*from.usr_);
  } else {
    usr_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgEvent)
}

void XmsgImOrgEvent::SharedCtor() {
  ::memset(&dept_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usr_) -
      reinterpret_cast<char*>(&dept_)) + sizeof(usr_));
  _cached_size_ = 0;
}

XmsgImOrgEvent::~XmsgImOrgEvent() {
  // @@protoc_insertion_point(destructor:XmsgImOrgEvent)
  SharedDtor();
}

void XmsgImOrgEvent::SharedDtor() {
  if (this != internal_default_instance()) delete dept_;
  if (this != internal_default_instance()) delete deptusr_;
  if (this != internal_default_instance()) delete usr_;
}

void XmsgImOrgEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgEvent::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgEvent& XmsgImOrgEvent::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEvent();
  return *internal_default_instance();
}

XmsgImOrgEvent* XmsgImOrgEvent::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgEvent* n = new XmsgImOrgEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && dept_ != NULL) {
    delete dept_;
  }
  dept_ = NULL;
  if (GetArenaNoVirtual() == NULL && deptusr_ != NULL) {
    delete deptusr_;
  }
  deptusr_ = NULL;
  if (GetArenaNoVirtual() == NULL && usr_ != NULL) {
    delete usr_;
  }
  usr_ = NULL;
  _internal_metadata_.Clear();
}

bool XmsgImOrgEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .XmsgImOrgEventDept dept = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImOrgEventDeptUsr deptUsr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deptusr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImOrgEventUsr usr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_usr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgEvent)
  return false;
#undef DO_
}

void XmsgImOrgEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XmsgImOrgEventDept dept = 1;
  if (this->has_dept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->dept_, output);
  }

  // .XmsgImOrgEventDeptUsr deptUsr = 2;
  if (this->has_deptusr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->deptusr_, output);
  }

  // .XmsgImOrgEventUsr usr = 3;
  if (this->has_usr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->usr_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgEvent)
}

::google::protobuf::uint8* XmsgImOrgEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XmsgImOrgEventDept dept = 1;
  if (this->has_dept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->dept_, deterministic, target);
  }

  // .XmsgImOrgEventDeptUsr deptUsr = 2;
  if (this->has_deptusr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->deptusr_, deterministic, target);
  }

  // .XmsgImOrgEventUsr usr = 3;
  if (this->has_usr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->usr_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgEvent)
  return target;
}

size_t XmsgImOrgEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .XmsgImOrgEventDept dept = 1;
  if (this->has_dept()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->dept_);
  }

  // .XmsgImOrgEventDeptUsr deptUsr = 2;
  if (this->has_deptusr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deptusr_);
  }

  // .XmsgImOrgEventUsr usr = 3;
  if (this->has_usr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->usr_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgEvent)
    MergeFrom(*source);
  }
}

void XmsgImOrgEvent::MergeFrom(const XmsgImOrgEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dept()) {
    mutable_dept()->::XmsgImOrgEventDept::MergeFrom(from.dept());
  }
  if (from.has_deptusr()) {
    mutable_deptusr()->::XmsgImOrgEventDeptUsr::MergeFrom(from.deptusr());
  }
  if (from.has_usr()) {
    mutable_usr()->::XmsgImOrgEventUsr::MergeFrom(from.usr());
  }
}

void XmsgImOrgEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgEvent::CopyFrom(const XmsgImOrgEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgEvent::IsInitialized() const {
  return true;
}

void XmsgImOrgEvent::Swap(XmsgImOrgEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgEvent::InternalSwap(XmsgImOrgEvent* other) {
  using std::swap;
  swap(dept_, other->dept_);
  swap(deptusr_, other->deptusr_);
  swap(usr_, other->usr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgEvent::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImOrgEventDept::InitAsDefaultInstance() {
  ::_XmsgImOrgEventDept_default_instance_._instance.get_mutable()->info_ = const_cast< ::XmsgImOrgNodeInfo*>(
      ::XmsgImOrgNodeInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgEventDept::kCgtFieldNumber;
const int XmsgImOrgEventDept::kPcgtFieldNumber;
const int XmsgImOrgEventDept::kNameFieldNumber;
const int XmsgImOrgEventDept::kEnableFieldNumber;
const int XmsgImOrgEventDept::kInfoFieldNumber;
const int XmsgImOrgEventDept::kVerFieldNumber;
const int XmsgImOrgEventDept::kGtsFieldNumber;
const int XmsgImOrgEventDept::kUtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgEventDept::XmsgImOrgEventDept()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEventDept();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgEventDept)
}
XmsgImOrgEventDept::XmsgImOrgEventDept(const XmsgImOrgEventDept& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  pcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pcgt().size() > 0) {
    pcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pcgt_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_info()) {
    info_ = new ::XmsgImOrgNodeInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&ver_, &from.ver_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_) -
    reinterpret_cast<char*>(&ver_)) + sizeof(enable_));
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgEventDept)
}

void XmsgImOrgEventDept::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&info_)) + sizeof(enable_));
  _cached_size_ = 0;
}

XmsgImOrgEventDept::~XmsgImOrgEventDept() {
  // @@protoc_insertion_point(destructor:XmsgImOrgEventDept)
  SharedDtor();
}

void XmsgImOrgEventDept::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pcgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
}

void XmsgImOrgEventDept::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgEventDept::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgEventDept& XmsgImOrgEventDept::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEventDept();
  return *internal_default_instance();
}

XmsgImOrgEventDept* XmsgImOrgEventDept::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgEventDept* n = new XmsgImOrgEventDept;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgEventDept::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgEventDept)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(enable_));
  _internal_metadata_.Clear();
}

bool XmsgImOrgEventDept::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgEventDept)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgEventDept.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pcgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pcgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pcgt().data(), static_cast<int>(this->pcgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgEventDept.pcgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgEventDept.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImOrgNodeInfo info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uts = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgEventDept)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgEventDept)
  return false;
#undef DO_
}

void XmsgImOrgEventDept::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgEventDept)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventDept.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // string pcgt = 2;
  if (this->pcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pcgt().data(), static_cast<int>(this->pcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventDept.pcgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pcgt(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventDept.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // bool enable = 4;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enable(), output);
  }

  // .XmsgImOrgNodeInfo info = 5;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->info_, output);
  }

  // uint64 ver = 6;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->ver(), output);
  }

  // uint64 gts = 7;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->gts(), output);
  }

  // uint64 uts = 8;
  if (this->uts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->uts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgEventDept)
}

::google::protobuf::uint8* XmsgImOrgEventDept::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgEventDept)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventDept.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // string pcgt = 2;
  if (this->pcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pcgt().data(), static_cast<int>(this->pcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventDept.pcgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pcgt(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventDept.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // bool enable = 4;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->enable(), target);
  }

  // .XmsgImOrgNodeInfo info = 5;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->info_, deterministic, target);
  }

  // uint64 ver = 6;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->ver(), target);
  }

  // uint64 gts = 7;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->gts(), target);
  }

  // uint64 uts = 8;
  if (this->uts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->uts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgEventDept)
  return target;
}

size_t XmsgImOrgEventDept::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgEventDept)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string pcgt = 2;
  if (this->pcgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pcgt());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .XmsgImOrgNodeInfo info = 5;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // uint64 ver = 6;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  // uint64 gts = 7;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 uts = 8;
  if (this->uts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uts());
  }

  // bool enable = 4;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgEventDept::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgEventDept)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgEventDept* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgEventDept>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgEventDept)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgEventDept)
    MergeFrom(*source);
  }
}

void XmsgImOrgEventDept::MergeFrom(const XmsgImOrgEventDept& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgEventDept)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.pcgt().size() > 0) {

    pcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pcgt_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_info()) {
    mutable_info()->::XmsgImOrgNodeInfo::MergeFrom(from.info());
  }
  if (from.ver() != 0) {
    set_ver(from.ver());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.uts() != 0) {
    set_uts(from.uts());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
}

void XmsgImOrgEventDept::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgEventDept)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgEventDept::CopyFrom(const XmsgImOrgEventDept& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgEventDept)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgEventDept::IsInitialized() const {
  return true;
}

void XmsgImOrgEventDept::Swap(XmsgImOrgEventDept* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgEventDept::InternalSwap(XmsgImOrgEventDept* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  pcgt_.Swap(&other->pcgt_);
  name_.Swap(&other->name_);
  swap(info_, other->info_);
  swap(ver_, other->ver_);
  swap(gts_, other->gts_);
  swap(uts_, other->uts_);
  swap(enable_, other->enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgEventDept::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImOrgEventDeptUsr::InitAsDefaultInstance() {
  ::_XmsgImOrgEventDeptUsr_default_instance_._instance.get_mutable()->info_ = const_cast< ::XmsgImOrgNodeInfo*>(
      ::XmsgImOrgNodeInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgEventDeptUsr::kDcgtFieldNumber;
const int XmsgImOrgEventDeptUsr::kUcgtFieldNumber;
const int XmsgImOrgEventDeptUsr::kNameFieldNumber;
const int XmsgImOrgEventDeptUsr::kEnableFieldNumber;
const int XmsgImOrgEventDeptUsr::kInfoFieldNumber;
const int XmsgImOrgEventDeptUsr::kVerFieldNumber;
const int XmsgImOrgEventDeptUsr::kGtsFieldNumber;
const int XmsgImOrgEventDeptUsr::kUtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgEventDeptUsr::XmsgImOrgEventDeptUsr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEventDeptUsr();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgEventDeptUsr)
}
XmsgImOrgEventDeptUsr::XmsgImOrgEventDeptUsr(const XmsgImOrgEventDeptUsr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dcgt().size() > 0) {
    dcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dcgt_);
  }
  ucgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ucgt().size() > 0) {
    ucgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ucgt_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_info()) {
    info_ = new ::XmsgImOrgNodeInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&ver_, &from.ver_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_) -
    reinterpret_cast<char*>(&ver_)) + sizeof(enable_));
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgEventDeptUsr)
}

void XmsgImOrgEventDeptUsr::SharedCtor() {
  dcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ucgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&info_)) + sizeof(enable_));
  _cached_size_ = 0;
}

XmsgImOrgEventDeptUsr::~XmsgImOrgEventDeptUsr() {
  // @@protoc_insertion_point(destructor:XmsgImOrgEventDeptUsr)
  SharedDtor();
}

void XmsgImOrgEventDeptUsr::SharedDtor() {
  dcgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ucgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
}

void XmsgImOrgEventDeptUsr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgEventDeptUsr::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgEventDeptUsr& XmsgImOrgEventDeptUsr::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEventDeptUsr();
  return *internal_default_instance();
}

XmsgImOrgEventDeptUsr* XmsgImOrgEventDeptUsr::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgEventDeptUsr* n = new XmsgImOrgEventDeptUsr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgEventDeptUsr::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgEventDeptUsr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ucgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(enable_));
  _internal_metadata_.Clear();
}

bool XmsgImOrgEventDeptUsr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgEventDeptUsr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string dcgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dcgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dcgt().data(), static_cast<int>(this->dcgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgEventDeptUsr.dcgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ucgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ucgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ucgt().data(), static_cast<int>(this->ucgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgEventDeptUsr.ucgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgEventDeptUsr.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImOrgNodeInfo info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uts = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgEventDeptUsr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgEventDeptUsr)
  return false;
#undef DO_
}

void XmsgImOrgEventDeptUsr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgEventDeptUsr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dcgt = 1;
  if (this->dcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dcgt().data(), static_cast<int>(this->dcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventDeptUsr.dcgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dcgt(), output);
  }

  // string ucgt = 2;
  if (this->ucgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ucgt().data(), static_cast<int>(this->ucgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventDeptUsr.ucgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ucgt(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventDeptUsr.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // bool enable = 4;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enable(), output);
  }

  // .XmsgImOrgNodeInfo info = 5;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->info_, output);
  }

  // uint64 ver = 6;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->ver(), output);
  }

  // uint64 gts = 7;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->gts(), output);
  }

  // uint64 uts = 8;
  if (this->uts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->uts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgEventDeptUsr)
}

::google::protobuf::uint8* XmsgImOrgEventDeptUsr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgEventDeptUsr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dcgt = 1;
  if (this->dcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dcgt().data(), static_cast<int>(this->dcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventDeptUsr.dcgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dcgt(), target);
  }

  // string ucgt = 2;
  if (this->ucgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ucgt().data(), static_cast<int>(this->ucgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventDeptUsr.ucgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ucgt(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventDeptUsr.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // bool enable = 4;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->enable(), target);
  }

  // .XmsgImOrgNodeInfo info = 5;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->info_, deterministic, target);
  }

  // uint64 ver = 6;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->ver(), target);
  }

  // uint64 gts = 7;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->gts(), target);
  }

  // uint64 uts = 8;
  if (this->uts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->uts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgEventDeptUsr)
  return target;
}

size_t XmsgImOrgEventDeptUsr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgEventDeptUsr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string dcgt = 1;
  if (this->dcgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dcgt());
  }

  // string ucgt = 2;
  if (this->ucgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ucgt());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .XmsgImOrgNodeInfo info = 5;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // uint64 ver = 6;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  // uint64 gts = 7;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 uts = 8;
  if (this->uts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uts());
  }

  // bool enable = 4;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgEventDeptUsr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgEventDeptUsr)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgEventDeptUsr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgEventDeptUsr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgEventDeptUsr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgEventDeptUsr)
    MergeFrom(*source);
  }
}

void XmsgImOrgEventDeptUsr::MergeFrom(const XmsgImOrgEventDeptUsr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgEventDeptUsr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dcgt().size() > 0) {

    dcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dcgt_);
  }
  if (from.ucgt().size() > 0) {

    ucgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ucgt_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_info()) {
    mutable_info()->::XmsgImOrgNodeInfo::MergeFrom(from.info());
  }
  if (from.ver() != 0) {
    set_ver(from.ver());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.uts() != 0) {
    set_uts(from.uts());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
}

void XmsgImOrgEventDeptUsr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgEventDeptUsr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgEventDeptUsr::CopyFrom(const XmsgImOrgEventDeptUsr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgEventDeptUsr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgEventDeptUsr::IsInitialized() const {
  return true;
}

void XmsgImOrgEventDeptUsr::Swap(XmsgImOrgEventDeptUsr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgEventDeptUsr::InternalSwap(XmsgImOrgEventDeptUsr* other) {
  using std::swap;
  dcgt_.Swap(&other->dcgt_);
  ucgt_.Swap(&other->ucgt_);
  name_.Swap(&other->name_);
  swap(info_, other->info_);
  swap(ver_, other->ver_);
  swap(gts_, other->gts_);
  swap(uts_, other->uts_);
  swap(enable_, other->enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgEventDeptUsr::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImOrgEventUsr::InitAsDefaultInstance() {
  ::_XmsgImOrgEventUsr_default_instance_._instance.get_mutable()->info_ = const_cast< ::XmsgImOrgNodeInfo*>(
      ::XmsgImOrgNodeInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgEventUsr::kCgtFieldNumber;
const int XmsgImOrgEventUsr::kNameFieldNumber;
const int XmsgImOrgEventUsr::kEnableFieldNumber;
const int XmsgImOrgEventUsr::kInfoFieldNumber;
const int XmsgImOrgEventUsr::kVerFieldNumber;
const int XmsgImOrgEventUsr::kGtsFieldNumber;
const int XmsgImOrgEventUsr::kUtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgEventUsr::XmsgImOrgEventUsr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEventUsr();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgEventUsr)
}
XmsgImOrgEventUsr::XmsgImOrgEventUsr(const XmsgImOrgEventUsr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_info()) {
    info_ = new ::XmsgImOrgNodeInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&ver_, &from.ver_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_) -
    reinterpret_cast<char*>(&ver_)) + sizeof(enable_));
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgEventUsr)
}

void XmsgImOrgEventUsr::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&info_)) + sizeof(enable_));
  _cached_size_ = 0;
}

XmsgImOrgEventUsr::~XmsgImOrgEventUsr() {
  // @@protoc_insertion_point(destructor:XmsgImOrgEventUsr)
  SharedDtor();
}

void XmsgImOrgEventUsr::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
}

void XmsgImOrgEventUsr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgEventUsr::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgEventUsr& XmsgImOrgEventUsr::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEventUsr();
  return *internal_default_instance();
}

XmsgImOrgEventUsr* XmsgImOrgEventUsr::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgEventUsr* n = new XmsgImOrgEventUsr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgEventUsr::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgEventUsr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(enable_));
  _internal_metadata_.Clear();
}

bool XmsgImOrgEventUsr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgEventUsr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgEventUsr.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgEventUsr.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImOrgNodeInfo info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgEventUsr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgEventUsr)
  return false;
#undef DO_
}

void XmsgImOrgEventUsr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgEventUsr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventUsr.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventUsr.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enable(), output);
  }

  // .XmsgImOrgNodeInfo info = 4;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->info_, output);
  }

  // uint64 ver = 5;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->ver(), output);
  }

  // uint64 gts = 6;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->gts(), output);
  }

  // uint64 uts = 7;
  if (this->uts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->uts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgEventUsr)
}

::google::protobuf::uint8* XmsgImOrgEventUsr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgEventUsr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventUsr.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgEventUsr.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enable(), target);
  }

  // .XmsgImOrgNodeInfo info = 4;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->info_, deterministic, target);
  }

  // uint64 ver = 5;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->ver(), target);
  }

  // uint64 gts = 6;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->gts(), target);
  }

  // uint64 uts = 7;
  if (this->uts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->uts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgEventUsr)
  return target;
}

size_t XmsgImOrgEventUsr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgEventUsr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .XmsgImOrgNodeInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // uint64 ver = 5;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  // uint64 gts = 6;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 uts = 7;
  if (this->uts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uts());
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgEventUsr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgEventUsr)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgEventUsr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgEventUsr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgEventUsr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgEventUsr)
    MergeFrom(*source);
  }
}

void XmsgImOrgEventUsr::MergeFrom(const XmsgImOrgEventUsr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgEventUsr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_info()) {
    mutable_info()->::XmsgImOrgNodeInfo::MergeFrom(from.info());
  }
  if (from.ver() != 0) {
    set_ver(from.ver());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.uts() != 0) {
    set_uts(from.uts());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
}

void XmsgImOrgEventUsr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgEventUsr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgEventUsr::CopyFrom(const XmsgImOrgEventUsr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgEventUsr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgEventUsr::IsInitialized() const {
  return true;
}

void XmsgImOrgEventUsr::Swap(XmsgImOrgEventUsr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgEventUsr::InternalSwap(XmsgImOrgEventUsr* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  name_.Swap(&other->name_);
  swap(info_, other->info_);
  swap(ver_, other->ver_);
  swap(gts_, other->gts_);
  swap(uts_, other->uts_);
  swap(enable_, other->enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgEventUsr::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImOrgNodeInfo_KvEntry_DoNotUse::XmsgImOrgNodeInfo_KvEntry_DoNotUse() {}
XmsgImOrgNodeInfo_KvEntry_DoNotUse::XmsgImOrgNodeInfo_KvEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImOrgNodeInfo_KvEntry_DoNotUse::MergeFrom(const XmsgImOrgNodeInfo_KvEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImOrgNodeInfo_KvEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[16];
}
void XmsgImOrgNodeInfo_KvEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImOrgNodeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgNodeInfo::kKvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgNodeInfo::XmsgImOrgNodeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgNodeInfo)
}
XmsgImOrgNodeInfo::XmsgImOrgNodeInfo(const XmsgImOrgNodeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kv_.MergeFrom(from.kv_);
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgNodeInfo)
}

void XmsgImOrgNodeInfo::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImOrgNodeInfo::~XmsgImOrgNodeInfo() {
  // @@protoc_insertion_point(destructor:XmsgImOrgNodeInfo)
  SharedDtor();
}

void XmsgImOrgNodeInfo::SharedDtor() {
}

void XmsgImOrgNodeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgNodeInfo::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgNodeInfo& XmsgImOrgNodeInfo::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeInfo();
  return *internal_default_instance();
}

XmsgImOrgNodeInfo* XmsgImOrgNodeInfo::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgNodeInfo* n = new XmsgImOrgNodeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgNodeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgNodeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kv_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImOrgNodeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgNodeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> kv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImOrgNodeInfo_KvEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImOrgNodeInfo_KvEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&kv_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgNodeInfo.KvEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgNodeInfo.KvEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgNodeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgNodeInfo)
  return false;
#undef DO_
}

void XmsgImOrgNodeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgNodeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> kv = 1;
  if (!this->kv().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImOrgNodeInfo.KvEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImOrgNodeInfo.KvEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->kv().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->kv().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kv().begin();
          it != this->kv().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImOrgNodeInfo_KvEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(kv_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImOrgNodeInfo_KvEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kv().begin();
          it != this->kv().end(); ++it) {
        entry.reset(kv_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgNodeInfo)
}

::google::protobuf::uint8* XmsgImOrgNodeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgNodeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> kv = 1;
  if (!this->kv().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImOrgNodeInfo.KvEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImOrgNodeInfo.KvEntry.value");
      }
    };

    if (deterministic &&
        this->kv().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->kv().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kv().begin();
          it != this->kv().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImOrgNodeInfo_KvEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(kv_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImOrgNodeInfo_KvEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kv().begin();
          it != this->kv().end(); ++it) {
        entry.reset(kv_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgNodeInfo)
  return target;
}

size_t XmsgImOrgNodeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgNodeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> kv = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->kv_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImOrgNodeInfo_KvEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->kv().begin();
        it != this->kv().end(); ++it) {
      entry.reset(kv_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgNodeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgNodeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgNodeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgNodeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgNodeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgNodeInfo)
    MergeFrom(*source);
  }
}

void XmsgImOrgNodeInfo::MergeFrom(const XmsgImOrgNodeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgNodeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kv_.MergeFrom(from.kv_);
}

void XmsgImOrgNodeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgNodeInfo::CopyFrom(const XmsgImOrgNodeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgNodeInfo::IsInitialized() const {
  return true;
}

void XmsgImOrgNodeInfo::Swap(XmsgImOrgNodeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgNodeInfo::InternalSwap(XmsgImOrgNodeInfo* other) {
  using std::swap;
  kv_.Swap(&other->kv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgNodeInfo::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImOrgNodeChild::InitAsDefaultInstance() {
  ::_XmsgImOrgNodeChild_default_instance_._instance.get_mutable()->info_ = const_cast< ::XmsgImOrgNodeInfo*>(
      ::XmsgImOrgNodeInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImOrgNodeChild::kCgtFieldNumber;
const int XmsgImOrgNodeChild::kNameFieldNumber;
const int XmsgImOrgNodeChild::kEnableFieldNumber;
const int XmsgImOrgNodeChild::kTypeFieldNumber;
const int XmsgImOrgNodeChild::kInfoFieldNumber;
const int XmsgImOrgNodeChild::kVerFieldNumber;
const int XmsgImOrgNodeChild::kGtsFieldNumber;
const int XmsgImOrgNodeChild::kUtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImOrgNodeChild::XmsgImOrgNodeChild()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeChild();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImOrgNodeChild)
}
XmsgImOrgNodeChild::XmsgImOrgNodeChild(const XmsgImOrgNodeChild& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_info()) {
    info_ = new ::XmsgImOrgNodeInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&enable_, &from.enable_,
    static_cast<size_t>(reinterpret_cast<char*>(&uts_) -
    reinterpret_cast<char*>(&enable_)) + sizeof(uts_));
  // @@protoc_insertion_point(copy_constructor:XmsgImOrgNodeChild)
}

void XmsgImOrgNodeChild::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uts_) -
      reinterpret_cast<char*>(&info_)) + sizeof(uts_));
  _cached_size_ = 0;
}

XmsgImOrgNodeChild::~XmsgImOrgNodeChild() {
  // @@protoc_insertion_point(destructor:XmsgImOrgNodeChild)
  SharedDtor();
}

void XmsgImOrgNodeChild::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
}

void XmsgImOrgNodeChild::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImOrgNodeChild::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImOrgNodeChild& XmsgImOrgNodeChild::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeChild();
  return *internal_default_instance();
}

XmsgImOrgNodeChild* XmsgImOrgNodeChild::New(::google::protobuf::Arena* arena) const {
  XmsgImOrgNodeChild* n = new XmsgImOrgNodeChild;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImOrgNodeChild::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImOrgNodeChild)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&enable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uts_) -
      reinterpret_cast<char*>(&enable_)) + sizeof(uts_));
  _internal_metadata_.Clear();
}

bool XmsgImOrgNodeChild::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImOrgNodeChild)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgNodeChild.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImOrgNodeChild.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImOrgNodeType type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::XmsgImOrgNodeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImOrgNodeInfo info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uts = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImOrgNodeChild)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImOrgNodeChild)
  return false;
#undef DO_
}

void XmsgImOrgNodeChild::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImOrgNodeChild)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeChild.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeChild.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enable(), output);
  }

  // .XmsgImOrgNodeType type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // .XmsgImOrgNodeInfo info = 5;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->info_, output);
  }

  // uint64 ver = 6;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->ver(), output);
  }

  // uint64 gts = 7;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->gts(), output);
  }

  // uint64 uts = 8;
  if (this->uts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->uts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImOrgNodeChild)
}

::google::protobuf::uint8* XmsgImOrgNodeChild::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImOrgNodeChild)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeChild.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImOrgNodeChild.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enable(), target);
  }

  // .XmsgImOrgNodeType type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // .XmsgImOrgNodeInfo info = 5;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->info_, deterministic, target);
  }

  // uint64 ver = 6;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->ver(), target);
  }

  // uint64 gts = 7;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->gts(), target);
  }

  // uint64 uts = 8;
  if (this->uts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->uts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImOrgNodeChild)
  return target;
}

size_t XmsgImOrgNodeChild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImOrgNodeChild)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .XmsgImOrgNodeInfo info = 5;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  // .XmsgImOrgNodeType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint64 ver = 6;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  // uint64 gts = 7;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 uts = 8;
  if (this->uts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImOrgNodeChild::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImOrgNodeChild)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImOrgNodeChild* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImOrgNodeChild>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImOrgNodeChild)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImOrgNodeChild)
    MergeFrom(*source);
  }
}

void XmsgImOrgNodeChild::MergeFrom(const XmsgImOrgNodeChild& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImOrgNodeChild)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_info()) {
    mutable_info()->::XmsgImOrgNodeInfo::MergeFrom(from.info());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.ver() != 0) {
    set_ver(from.ver());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.uts() != 0) {
    set_uts(from.uts());
  }
}

void XmsgImOrgNodeChild::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImOrgNodeChild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImOrgNodeChild::CopyFrom(const XmsgImOrgNodeChild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImOrgNodeChild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImOrgNodeChild::IsInitialized() const {
  return true;
}

void XmsgImOrgNodeChild::Swap(XmsgImOrgNodeChild* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImOrgNodeChild::InternalSwap(XmsgImOrgNodeChild* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  name_.Swap(&other->name_);
  swap(info_, other->info_);
  swap(enable_, other->enable_);
  swap(type_, other->type_);
  swap(ver_, other->ver_);
  swap(gts_, other->gts_);
  swap(uts_, other->uts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImOrgNodeChild::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
