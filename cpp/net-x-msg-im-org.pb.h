// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-im-org.proto

#ifndef PROTOBUF_net_2dx_2dmsg_2dim_2dorg_2eproto__INCLUDED
#define PROTOBUF_net_2dx_2dmsg_2dim_2dorg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[19];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgImOrgSyncSubReqImpl();
void InitDefaultsXmsgImOrgSyncSubReq();
void InitDefaultsXmsgImOrgSyncSubRspImpl();
void InitDefaultsXmsgImOrgSyncSubRsp();
void InitDefaultsXmsgImOrgSyncPubReqImpl();
void InitDefaultsXmsgImOrgSyncPubReq();
void InitDefaultsXmsgImOrgSyncPubRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImOrgSyncPubRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImOrgSyncPubRspImpl();
void InitDefaultsXmsgImOrgSyncPubRsp();
void InitDefaultsXmsgImOrgChangedNoticeImpl();
void InitDefaultsXmsgImOrgChangedNotice();
void InitDefaultsXmsgImOrgNodeChildQueryReqImpl();
void InitDefaultsXmsgImOrgNodeChildQueryReq();
void InitDefaultsXmsgImOrgNodeChildQueryRspImpl();
void InitDefaultsXmsgImOrgNodeChildQueryRsp();
void InitDefaultsXmsgImOrgNodeDeptUsrQueryReqImpl();
void InitDefaultsXmsgImOrgNodeDeptUsrQueryReq();
void InitDefaultsXmsgImOrgNodeDeptUsrQueryRspImpl();
void InitDefaultsXmsgImOrgNodeDeptUsrQueryRsp();
void InitDefaultsXmsgImOrgNodeQueryReqImpl();
void InitDefaultsXmsgImOrgNodeQueryReq();
void InitDefaultsXmsgImOrgNodeQueryRspImpl();
void InitDefaultsXmsgImOrgNodeQueryRsp();
void InitDefaultsXmsgImOrgEventImpl();
void InitDefaultsXmsgImOrgEvent();
void InitDefaultsXmsgImOrgEventDeptImpl();
void InitDefaultsXmsgImOrgEventDept();
void InitDefaultsXmsgImOrgEventDeptUsrImpl();
void InitDefaultsXmsgImOrgEventDeptUsr();
void InitDefaultsXmsgImOrgEventUsrImpl();
void InitDefaultsXmsgImOrgEventUsr();
void InitDefaultsXmsgImOrgNodeInfo_KvEntry_DoNotUseImpl();
void InitDefaultsXmsgImOrgNodeInfo_KvEntry_DoNotUse();
void InitDefaultsXmsgImOrgNodeInfoImpl();
void InitDefaultsXmsgImOrgNodeInfo();
void InitDefaultsXmsgImOrgNodeChildImpl();
void InitDefaultsXmsgImOrgNodeChild();
inline void InitDefaults() {
  InitDefaultsXmsgImOrgSyncSubReq();
  InitDefaultsXmsgImOrgSyncSubRsp();
  InitDefaultsXmsgImOrgSyncPubReq();
  InitDefaultsXmsgImOrgSyncPubRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImOrgSyncPubRsp();
  InitDefaultsXmsgImOrgChangedNotice();
  InitDefaultsXmsgImOrgNodeChildQueryReq();
  InitDefaultsXmsgImOrgNodeChildQueryRsp();
  InitDefaultsXmsgImOrgNodeDeptUsrQueryReq();
  InitDefaultsXmsgImOrgNodeDeptUsrQueryRsp();
  InitDefaultsXmsgImOrgNodeQueryReq();
  InitDefaultsXmsgImOrgNodeQueryRsp();
  InitDefaultsXmsgImOrgEvent();
  InitDefaultsXmsgImOrgEventDept();
  InitDefaultsXmsgImOrgEventDeptUsr();
  InitDefaultsXmsgImOrgEventUsr();
  InitDefaultsXmsgImOrgNodeInfo_KvEntry_DoNotUse();
  InitDefaultsXmsgImOrgNodeInfo();
  InitDefaultsXmsgImOrgNodeChild();
}
}  // namespace protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto
class XmsgImOrgChangedNotice;
class XmsgImOrgChangedNoticeDefaultTypeInternal;
extern XmsgImOrgChangedNoticeDefaultTypeInternal _XmsgImOrgChangedNotice_default_instance_;
class XmsgImOrgEvent;
class XmsgImOrgEventDefaultTypeInternal;
extern XmsgImOrgEventDefaultTypeInternal _XmsgImOrgEvent_default_instance_;
class XmsgImOrgEventDept;
class XmsgImOrgEventDeptDefaultTypeInternal;
extern XmsgImOrgEventDeptDefaultTypeInternal _XmsgImOrgEventDept_default_instance_;
class XmsgImOrgEventDeptUsr;
class XmsgImOrgEventDeptUsrDefaultTypeInternal;
extern XmsgImOrgEventDeptUsrDefaultTypeInternal _XmsgImOrgEventDeptUsr_default_instance_;
class XmsgImOrgEventUsr;
class XmsgImOrgEventUsrDefaultTypeInternal;
extern XmsgImOrgEventUsrDefaultTypeInternal _XmsgImOrgEventUsr_default_instance_;
class XmsgImOrgNodeChild;
class XmsgImOrgNodeChildDefaultTypeInternal;
extern XmsgImOrgNodeChildDefaultTypeInternal _XmsgImOrgNodeChild_default_instance_;
class XmsgImOrgNodeChildQueryReq;
class XmsgImOrgNodeChildQueryReqDefaultTypeInternal;
extern XmsgImOrgNodeChildQueryReqDefaultTypeInternal _XmsgImOrgNodeChildQueryReq_default_instance_;
class XmsgImOrgNodeChildQueryRsp;
class XmsgImOrgNodeChildQueryRspDefaultTypeInternal;
extern XmsgImOrgNodeChildQueryRspDefaultTypeInternal _XmsgImOrgNodeChildQueryRsp_default_instance_;
class XmsgImOrgNodeDeptUsrQueryReq;
class XmsgImOrgNodeDeptUsrQueryReqDefaultTypeInternal;
extern XmsgImOrgNodeDeptUsrQueryReqDefaultTypeInternal _XmsgImOrgNodeDeptUsrQueryReq_default_instance_;
class XmsgImOrgNodeDeptUsrQueryRsp;
class XmsgImOrgNodeDeptUsrQueryRspDefaultTypeInternal;
extern XmsgImOrgNodeDeptUsrQueryRspDefaultTypeInternal _XmsgImOrgNodeDeptUsrQueryRsp_default_instance_;
class XmsgImOrgNodeInfo;
class XmsgImOrgNodeInfoDefaultTypeInternal;
extern XmsgImOrgNodeInfoDefaultTypeInternal _XmsgImOrgNodeInfo_default_instance_;
class XmsgImOrgNodeInfo_KvEntry_DoNotUse;
class XmsgImOrgNodeInfo_KvEntry_DoNotUseDefaultTypeInternal;
extern XmsgImOrgNodeInfo_KvEntry_DoNotUseDefaultTypeInternal _XmsgImOrgNodeInfo_KvEntry_DoNotUse_default_instance_;
class XmsgImOrgNodeQueryReq;
class XmsgImOrgNodeQueryReqDefaultTypeInternal;
extern XmsgImOrgNodeQueryReqDefaultTypeInternal _XmsgImOrgNodeQueryReq_default_instance_;
class XmsgImOrgNodeQueryRsp;
class XmsgImOrgNodeQueryRspDefaultTypeInternal;
extern XmsgImOrgNodeQueryRspDefaultTypeInternal _XmsgImOrgNodeQueryRsp_default_instance_;
class XmsgImOrgSyncPubReq;
class XmsgImOrgSyncPubReqDefaultTypeInternal;
extern XmsgImOrgSyncPubReqDefaultTypeInternal _XmsgImOrgSyncPubReq_default_instance_;
class XmsgImOrgSyncPubRsp;
class XmsgImOrgSyncPubRspDefaultTypeInternal;
extern XmsgImOrgSyncPubRspDefaultTypeInternal _XmsgImOrgSyncPubRsp_default_instance_;
class XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse;
class XmsgImOrgSyncPubRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImOrgSyncPubRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImOrgSyncSubReq;
class XmsgImOrgSyncSubReqDefaultTypeInternal;
extern XmsgImOrgSyncSubReqDefaultTypeInternal _XmsgImOrgSyncSubReq_default_instance_;
class XmsgImOrgSyncSubRsp;
class XmsgImOrgSyncSubRspDefaultTypeInternal;
extern XmsgImOrgSyncSubRspDefaultTypeInternal _XmsgImOrgSyncSubRsp_default_instance_;

enum XmsgImOrgNodeType {
  X_MSG_IM_ORG_NODE_TYPE__RESERVED__ = 0,
  X_MSG_IM_ORG_NODE_TYPE_BRANCH = 1,
  X_MSG_IM_ORG_NODE_TYPE_LEAF = 2,
  XmsgImOrgNodeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  XmsgImOrgNodeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool XmsgImOrgNodeType_IsValid(int value);
const XmsgImOrgNodeType XmsgImOrgNodeType_MIN = X_MSG_IM_ORG_NODE_TYPE__RESERVED__;
const XmsgImOrgNodeType XmsgImOrgNodeType_MAX = X_MSG_IM_ORG_NODE_TYPE_LEAF;
const int XmsgImOrgNodeType_ARRAYSIZE = XmsgImOrgNodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* XmsgImOrgNodeType_descriptor();
inline const ::std::string& XmsgImOrgNodeType_Name(XmsgImOrgNodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    XmsgImOrgNodeType_descriptor(), value);
}
inline bool XmsgImOrgNodeType_Parse(
    const ::std::string& name, XmsgImOrgNodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<XmsgImOrgNodeType>(
    XmsgImOrgNodeType_descriptor(), name, value);
}
// ===================================================================

class XmsgImOrgSyncSubReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgSyncSubReq) */ {
 public:
  XmsgImOrgSyncSubReq();
  virtual ~XmsgImOrgSyncSubReq();

  XmsgImOrgSyncSubReq(const XmsgImOrgSyncSubReq& from);

  inline XmsgImOrgSyncSubReq& operator=(const XmsgImOrgSyncSubReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgSyncSubReq(XmsgImOrgSyncSubReq&& from) noexcept
    : XmsgImOrgSyncSubReq() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgSyncSubReq& operator=(XmsgImOrgSyncSubReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgSyncSubReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgSyncSubReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgSyncSubReq*>(
               &_XmsgImOrgSyncSubReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(XmsgImOrgSyncSubReq* other);
  friend void swap(XmsgImOrgSyncSubReq& a, XmsgImOrgSyncSubReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgSyncSubReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgSyncSubReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgSyncSubReq& from);
  void MergeFrom(const XmsgImOrgSyncSubReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgSyncSubReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 ver4dept = 1;
  void clear_ver4dept();
  static const int kVer4DeptFieldNumber = 1;
  ::google::protobuf::uint64 ver4dept() const;
  void set_ver4dept(::google::protobuf::uint64 value);

  // uint64 ver4deptUsr = 2;
  void clear_ver4deptusr();
  static const int kVer4DeptUsrFieldNumber = 2;
  ::google::protobuf::uint64 ver4deptusr() const;
  void set_ver4deptusr(::google::protobuf::uint64 value);

  // uint64 ver4usr = 3;
  void clear_ver4usr();
  static const int kVer4UsrFieldNumber = 3;
  ::google::protobuf::uint64 ver4usr() const;
  void set_ver4usr(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImOrgSyncSubReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ver4dept_;
  ::google::protobuf::uint64 ver4deptusr_;
  ::google::protobuf::uint64 ver4usr_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgSyncSubReqImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgSyncSubRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgSyncSubRsp) */ {
 public:
  XmsgImOrgSyncSubRsp();
  virtual ~XmsgImOrgSyncSubRsp();

  XmsgImOrgSyncSubRsp(const XmsgImOrgSyncSubRsp& from);

  inline XmsgImOrgSyncSubRsp& operator=(const XmsgImOrgSyncSubRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgSyncSubRsp(XmsgImOrgSyncSubRsp&& from) noexcept
    : XmsgImOrgSyncSubRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgSyncSubRsp& operator=(XmsgImOrgSyncSubRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgSyncSubRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgSyncSubRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgSyncSubRsp*>(
               &_XmsgImOrgSyncSubRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(XmsgImOrgSyncSubRsp* other);
  friend void swap(XmsgImOrgSyncSubRsp& a, XmsgImOrgSyncSubRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgSyncSubRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgSyncSubRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgSyncSubRsp& from);
  void MergeFrom(const XmsgImOrgSyncSubRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgSyncSubRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 ver4deptLatest = 1;
  void clear_ver4deptlatest();
  static const int kVer4DeptLatestFieldNumber = 1;
  ::google::protobuf::uint64 ver4deptlatest() const;
  void set_ver4deptlatest(::google::protobuf::uint64 value);

  // uint64 ver4deptUsrLatest = 2;
  void clear_ver4deptusrlatest();
  static const int kVer4DeptUsrLatestFieldNumber = 2;
  ::google::protobuf::uint64 ver4deptusrlatest() const;
  void set_ver4deptusrlatest(::google::protobuf::uint64 value);

  // uint64 ver4usrLatest = 3;
  void clear_ver4usrlatest();
  static const int kVer4UsrLatestFieldNumber = 3;
  ::google::protobuf::uint64 ver4usrlatest() const;
  void set_ver4usrlatest(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImOrgSyncSubRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ver4deptlatest_;
  ::google::protobuf::uint64 ver4deptusrlatest_;
  ::google::protobuf::uint64 ver4usrlatest_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgSyncSubRspImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgSyncPubReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgSyncPubReq) */ {
 public:
  XmsgImOrgSyncPubReq();
  virtual ~XmsgImOrgSyncPubReq();

  XmsgImOrgSyncPubReq(const XmsgImOrgSyncPubReq& from);

  inline XmsgImOrgSyncPubReq& operator=(const XmsgImOrgSyncPubReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgSyncPubReq(XmsgImOrgSyncPubReq&& from) noexcept
    : XmsgImOrgSyncPubReq() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgSyncPubReq& operator=(XmsgImOrgSyncPubReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgSyncPubReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgSyncPubReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgSyncPubReq*>(
               &_XmsgImOrgSyncPubReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(XmsgImOrgSyncPubReq* other);
  friend void swap(XmsgImOrgSyncPubReq& a, XmsgImOrgSyncPubReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgSyncPubReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgSyncPubReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgSyncPubReq& from);
  void MergeFrom(const XmsgImOrgSyncPubReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgSyncPubReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XmsgImOrgEvent event = 1;
  int event_size() const;
  void clear_event();
  static const int kEventFieldNumber = 1;
  const ::XmsgImOrgEvent& event(int index) const;
  ::XmsgImOrgEvent* mutable_event(int index);
  ::XmsgImOrgEvent* add_event();
  ::google::protobuf::RepeatedPtrField< ::XmsgImOrgEvent >*
      mutable_event();
  const ::google::protobuf::RepeatedPtrField< ::XmsgImOrgEvent >&
      event() const;

  // @@protoc_insertion_point(class_scope:XmsgImOrgSyncPubReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XmsgImOrgEvent > event_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgSyncPubReqImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse();
  XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse& other);
  static const XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse*>(&_XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImOrgSyncPubRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgSyncPubRsp) */ {
 public:
  XmsgImOrgSyncPubRsp();
  virtual ~XmsgImOrgSyncPubRsp();

  XmsgImOrgSyncPubRsp(const XmsgImOrgSyncPubRsp& from);

  inline XmsgImOrgSyncPubRsp& operator=(const XmsgImOrgSyncPubRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgSyncPubRsp(XmsgImOrgSyncPubRsp&& from) noexcept
    : XmsgImOrgSyncPubRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgSyncPubRsp& operator=(XmsgImOrgSyncPubRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgSyncPubRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgSyncPubRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgSyncPubRsp*>(
               &_XmsgImOrgSyncPubRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(XmsgImOrgSyncPubRsp* other);
  friend void swap(XmsgImOrgSyncPubRsp& a, XmsgImOrgSyncPubRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgSyncPubRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgSyncPubRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgSyncPubRsp& from);
  void MergeFrom(const XmsgImOrgSyncPubRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgSyncPubRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImOrgSyncPubRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImOrgSyncPubRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgSyncPubRspImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgChangedNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgChangedNotice) */ {
 public:
  XmsgImOrgChangedNotice();
  virtual ~XmsgImOrgChangedNotice();

  XmsgImOrgChangedNotice(const XmsgImOrgChangedNotice& from);

  inline XmsgImOrgChangedNotice& operator=(const XmsgImOrgChangedNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgChangedNotice(XmsgImOrgChangedNotice&& from) noexcept
    : XmsgImOrgChangedNotice() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgChangedNotice& operator=(XmsgImOrgChangedNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgChangedNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgChangedNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgChangedNotice*>(
               &_XmsgImOrgChangedNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(XmsgImOrgChangedNotice* other);
  friend void swap(XmsgImOrgChangedNotice& a, XmsgImOrgChangedNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgChangedNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgChangedNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgChangedNotice& from);
  void MergeFrom(const XmsgImOrgChangedNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgChangedNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .XmsgImOrgEvent event = 1;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 1;
  const ::XmsgImOrgEvent& event() const;
  ::XmsgImOrgEvent* release_event();
  ::XmsgImOrgEvent* mutable_event();
  void set_allocated_event(::XmsgImOrgEvent* event);

  // @@protoc_insertion_point(class_scope:XmsgImOrgChangedNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::XmsgImOrgEvent* event_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgChangedNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgNodeChildQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgNodeChildQueryReq) */ {
 public:
  XmsgImOrgNodeChildQueryReq();
  virtual ~XmsgImOrgNodeChildQueryReq();

  XmsgImOrgNodeChildQueryReq(const XmsgImOrgNodeChildQueryReq& from);

  inline XmsgImOrgNodeChildQueryReq& operator=(const XmsgImOrgNodeChildQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgNodeChildQueryReq(XmsgImOrgNodeChildQueryReq&& from) noexcept
    : XmsgImOrgNodeChildQueryReq() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgNodeChildQueryReq& operator=(XmsgImOrgNodeChildQueryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgNodeChildQueryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgNodeChildQueryReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgNodeChildQueryReq*>(
               &_XmsgImOrgNodeChildQueryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(XmsgImOrgNodeChildQueryReq* other);
  friend void swap(XmsgImOrgNodeChildQueryReq& a, XmsgImOrgNodeChildQueryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgNodeChildQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgNodeChildQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgNodeChildQueryReq& from);
  void MergeFrom(const XmsgImOrgNodeChildQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgNodeChildQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // @@protoc_insertion_point(class_scope:XmsgImOrgNodeChildQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeChildQueryReqImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgNodeChildQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgNodeChildQueryRsp) */ {
 public:
  XmsgImOrgNodeChildQueryRsp();
  virtual ~XmsgImOrgNodeChildQueryRsp();

  XmsgImOrgNodeChildQueryRsp(const XmsgImOrgNodeChildQueryRsp& from);

  inline XmsgImOrgNodeChildQueryRsp& operator=(const XmsgImOrgNodeChildQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgNodeChildQueryRsp(XmsgImOrgNodeChildQueryRsp&& from) noexcept
    : XmsgImOrgNodeChildQueryRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgNodeChildQueryRsp& operator=(XmsgImOrgNodeChildQueryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgNodeChildQueryRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgNodeChildQueryRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgNodeChildQueryRsp*>(
               &_XmsgImOrgNodeChildQueryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(XmsgImOrgNodeChildQueryRsp* other);
  friend void swap(XmsgImOrgNodeChildQueryRsp& a, XmsgImOrgNodeChildQueryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgNodeChildQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgNodeChildQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgNodeChildQueryRsp& from);
  void MergeFrom(const XmsgImOrgNodeChildQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgNodeChildQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XmsgImOrgNodeChild child = 1;
  int child_size() const;
  void clear_child();
  static const int kChildFieldNumber = 1;
  const ::XmsgImOrgNodeChild& child(int index) const;
  ::XmsgImOrgNodeChild* mutable_child(int index);
  ::XmsgImOrgNodeChild* add_child();
  ::google::protobuf::RepeatedPtrField< ::XmsgImOrgNodeChild >*
      mutable_child();
  const ::google::protobuf::RepeatedPtrField< ::XmsgImOrgNodeChild >&
      child() const;

  // @@protoc_insertion_point(class_scope:XmsgImOrgNodeChildQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XmsgImOrgNodeChild > child_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeChildQueryRspImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgNodeDeptUsrQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgNodeDeptUsrQueryReq) */ {
 public:
  XmsgImOrgNodeDeptUsrQueryReq();
  virtual ~XmsgImOrgNodeDeptUsrQueryReq();

  XmsgImOrgNodeDeptUsrQueryReq(const XmsgImOrgNodeDeptUsrQueryReq& from);

  inline XmsgImOrgNodeDeptUsrQueryReq& operator=(const XmsgImOrgNodeDeptUsrQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgNodeDeptUsrQueryReq(XmsgImOrgNodeDeptUsrQueryReq&& from) noexcept
    : XmsgImOrgNodeDeptUsrQueryReq() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgNodeDeptUsrQueryReq& operator=(XmsgImOrgNodeDeptUsrQueryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgNodeDeptUsrQueryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgNodeDeptUsrQueryReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgNodeDeptUsrQueryReq*>(
               &_XmsgImOrgNodeDeptUsrQueryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(XmsgImOrgNodeDeptUsrQueryReq* other);
  friend void swap(XmsgImOrgNodeDeptUsrQueryReq& a, XmsgImOrgNodeDeptUsrQueryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgNodeDeptUsrQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgNodeDeptUsrQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgNodeDeptUsrQueryReq& from);
  void MergeFrom(const XmsgImOrgNodeDeptUsrQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgNodeDeptUsrQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string dcgt = 1;
  void clear_dcgt();
  static const int kDcgtFieldNumber = 1;
  const ::std::string& dcgt() const;
  void set_dcgt(const ::std::string& value);
  #if LANG_CXX11
  void set_dcgt(::std::string&& value);
  #endif
  void set_dcgt(const char* value);
  void set_dcgt(const char* value, size_t size);
  ::std::string* mutable_dcgt();
  ::std::string* release_dcgt();
  void set_allocated_dcgt(::std::string* dcgt);

  // string ucgt = 2;
  void clear_ucgt();
  static const int kUcgtFieldNumber = 2;
  const ::std::string& ucgt() const;
  void set_ucgt(const ::std::string& value);
  #if LANG_CXX11
  void set_ucgt(::std::string&& value);
  #endif
  void set_ucgt(const char* value);
  void set_ucgt(const char* value, size_t size);
  ::std::string* mutable_ucgt();
  ::std::string* release_ucgt();
  void set_allocated_ucgt(::std::string* ucgt);

  // @@protoc_insertion_point(class_scope:XmsgImOrgNodeDeptUsrQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dcgt_;
  ::google::protobuf::internal::ArenaStringPtr ucgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeDeptUsrQueryReqImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgNodeDeptUsrQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgNodeDeptUsrQueryRsp) */ {
 public:
  XmsgImOrgNodeDeptUsrQueryRsp();
  virtual ~XmsgImOrgNodeDeptUsrQueryRsp();

  XmsgImOrgNodeDeptUsrQueryRsp(const XmsgImOrgNodeDeptUsrQueryRsp& from);

  inline XmsgImOrgNodeDeptUsrQueryRsp& operator=(const XmsgImOrgNodeDeptUsrQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgNodeDeptUsrQueryRsp(XmsgImOrgNodeDeptUsrQueryRsp&& from) noexcept
    : XmsgImOrgNodeDeptUsrQueryRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgNodeDeptUsrQueryRsp& operator=(XmsgImOrgNodeDeptUsrQueryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgNodeDeptUsrQueryRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgNodeDeptUsrQueryRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgNodeDeptUsrQueryRsp*>(
               &_XmsgImOrgNodeDeptUsrQueryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(XmsgImOrgNodeDeptUsrQueryRsp* other);
  friend void swap(XmsgImOrgNodeDeptUsrQueryRsp& a, XmsgImOrgNodeDeptUsrQueryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgNodeDeptUsrQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgNodeDeptUsrQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgNodeDeptUsrQueryRsp& from);
  void MergeFrom(const XmsgImOrgNodeDeptUsrQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgNodeDeptUsrQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .XmsgImOrgNodeInfo info = 4;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 4;
  const ::XmsgImOrgNodeInfo& info() const;
  ::XmsgImOrgNodeInfo* release_info();
  ::XmsgImOrgNodeInfo* mutable_info();
  void set_allocated_info(::XmsgImOrgNodeInfo* info);

  // uint64 ver = 5;
  void clear_ver();
  static const int kVerFieldNumber = 5;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // uint64 gts = 6;
  void clear_gts();
  static const int kGtsFieldNumber = 6;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // uint64 uts = 7;
  void clear_uts();
  static const int kUtsFieldNumber = 7;
  ::google::protobuf::uint64 uts() const;
  void set_uts(::google::protobuf::uint64 value);

  // bool enable = 3;
  void clear_enable();
  static const int kEnableFieldNumber = 3;
  bool enable() const;
  void set_enable(bool value);

  // @@protoc_insertion_point(class_scope:XmsgImOrgNodeDeptUsrQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::XmsgImOrgNodeInfo* info_;
  ::google::protobuf::uint64 ver_;
  ::google::protobuf::uint64 gts_;
  ::google::protobuf::uint64 uts_;
  bool enable_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeDeptUsrQueryRspImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgNodeQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgNodeQueryReq) */ {
 public:
  XmsgImOrgNodeQueryReq();
  virtual ~XmsgImOrgNodeQueryReq();

  XmsgImOrgNodeQueryReq(const XmsgImOrgNodeQueryReq& from);

  inline XmsgImOrgNodeQueryReq& operator=(const XmsgImOrgNodeQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgNodeQueryReq(XmsgImOrgNodeQueryReq&& from) noexcept
    : XmsgImOrgNodeQueryReq() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgNodeQueryReq& operator=(XmsgImOrgNodeQueryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgNodeQueryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgNodeQueryReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgNodeQueryReq*>(
               &_XmsgImOrgNodeQueryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(XmsgImOrgNodeQueryReq* other);
  friend void swap(XmsgImOrgNodeQueryReq& a, XmsgImOrgNodeQueryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgNodeQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgNodeQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgNodeQueryReq& from);
  void MergeFrom(const XmsgImOrgNodeQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgNodeQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // @@protoc_insertion_point(class_scope:XmsgImOrgNodeQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeQueryReqImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgNodeQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgNodeQueryRsp) */ {
 public:
  XmsgImOrgNodeQueryRsp();
  virtual ~XmsgImOrgNodeQueryRsp();

  XmsgImOrgNodeQueryRsp(const XmsgImOrgNodeQueryRsp& from);

  inline XmsgImOrgNodeQueryRsp& operator=(const XmsgImOrgNodeQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgNodeQueryRsp(XmsgImOrgNodeQueryRsp&& from) noexcept
    : XmsgImOrgNodeQueryRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgNodeQueryRsp& operator=(XmsgImOrgNodeQueryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgNodeQueryRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgNodeQueryRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgNodeQueryRsp*>(
               &_XmsgImOrgNodeQueryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(XmsgImOrgNodeQueryRsp* other);
  friend void swap(XmsgImOrgNodeQueryRsp& a, XmsgImOrgNodeQueryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgNodeQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgNodeQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgNodeQueryRsp& from);
  void MergeFrom(const XmsgImOrgNodeQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgNodeQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string pgt = 1;
  void clear_pgt();
  static const int kPgtFieldNumber = 1;
  const ::std::string& pgt() const;
  void set_pgt(const ::std::string& value);
  #if LANG_CXX11
  void set_pgt(::std::string&& value);
  #endif
  void set_pgt(const char* value);
  void set_pgt(const char* value, size_t size);
  ::std::string* mutable_pgt();
  ::std::string* release_pgt();
  void set_allocated_pgt(::std::string* pgt);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .XmsgImOrgNodeInfo info = 5;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 5;
  const ::XmsgImOrgNodeInfo& info() const;
  ::XmsgImOrgNodeInfo* release_info();
  ::XmsgImOrgNodeInfo* mutable_info();
  void set_allocated_info(::XmsgImOrgNodeInfo* info);

  // bool enable = 3;
  void clear_enable();
  static const int kEnableFieldNumber = 3;
  bool enable() const;
  void set_enable(bool value);

  // .XmsgImOrgNodeType type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::XmsgImOrgNodeType type() const;
  void set_type(::XmsgImOrgNodeType value);

  // uint64 ver = 6;
  void clear_ver();
  static const int kVerFieldNumber = 6;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // uint64 gts = 7;
  void clear_gts();
  static const int kGtsFieldNumber = 7;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // uint64 uts = 8;
  void clear_uts();
  static const int kUtsFieldNumber = 8;
  ::google::protobuf::uint64 uts() const;
  void set_uts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImOrgNodeQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr pgt_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::XmsgImOrgNodeInfo* info_;
  bool enable_;
  int type_;
  ::google::protobuf::uint64 ver_;
  ::google::protobuf::uint64 gts_;
  ::google::protobuf::uint64 uts_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeQueryRspImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgEvent) */ {
 public:
  XmsgImOrgEvent();
  virtual ~XmsgImOrgEvent();

  XmsgImOrgEvent(const XmsgImOrgEvent& from);

  inline XmsgImOrgEvent& operator=(const XmsgImOrgEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgEvent(XmsgImOrgEvent&& from) noexcept
    : XmsgImOrgEvent() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgEvent& operator=(XmsgImOrgEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgEvent* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgEvent*>(
               &_XmsgImOrgEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(XmsgImOrgEvent* other);
  friend void swap(XmsgImOrgEvent& a, XmsgImOrgEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgEvent& from);
  void MergeFrom(const XmsgImOrgEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .XmsgImOrgEventDept dept = 1;
  bool has_dept() const;
  void clear_dept();
  static const int kDeptFieldNumber = 1;
  const ::XmsgImOrgEventDept& dept() const;
  ::XmsgImOrgEventDept* release_dept();
  ::XmsgImOrgEventDept* mutable_dept();
  void set_allocated_dept(::XmsgImOrgEventDept* dept);

  // .XmsgImOrgEventDeptUsr deptUsr = 2;
  bool has_deptusr() const;
  void clear_deptusr();
  static const int kDeptUsrFieldNumber = 2;
  const ::XmsgImOrgEventDeptUsr& deptusr() const;
  ::XmsgImOrgEventDeptUsr* release_deptusr();
  ::XmsgImOrgEventDeptUsr* mutable_deptusr();
  void set_allocated_deptusr(::XmsgImOrgEventDeptUsr* deptusr);

  // .XmsgImOrgEventUsr usr = 3;
  bool has_usr() const;
  void clear_usr();
  static const int kUsrFieldNumber = 3;
  const ::XmsgImOrgEventUsr& usr() const;
  ::XmsgImOrgEventUsr* release_usr();
  ::XmsgImOrgEventUsr* mutable_usr();
  void set_allocated_usr(::XmsgImOrgEventUsr* usr);

  // @@protoc_insertion_point(class_scope:XmsgImOrgEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::XmsgImOrgEventDept* dept_;
  ::XmsgImOrgEventDeptUsr* deptusr_;
  ::XmsgImOrgEventUsr* usr_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEventImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgEventDept : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgEventDept) */ {
 public:
  XmsgImOrgEventDept();
  virtual ~XmsgImOrgEventDept();

  XmsgImOrgEventDept(const XmsgImOrgEventDept& from);

  inline XmsgImOrgEventDept& operator=(const XmsgImOrgEventDept& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgEventDept(XmsgImOrgEventDept&& from) noexcept
    : XmsgImOrgEventDept() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgEventDept& operator=(XmsgImOrgEventDept&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgEventDept& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgEventDept* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgEventDept*>(
               &_XmsgImOrgEventDept_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(XmsgImOrgEventDept* other);
  friend void swap(XmsgImOrgEventDept& a, XmsgImOrgEventDept& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgEventDept* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgEventDept* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgEventDept& from);
  void MergeFrom(const XmsgImOrgEventDept& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgEventDept* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string pcgt = 2;
  void clear_pcgt();
  static const int kPcgtFieldNumber = 2;
  const ::std::string& pcgt() const;
  void set_pcgt(const ::std::string& value);
  #if LANG_CXX11
  void set_pcgt(::std::string&& value);
  #endif
  void set_pcgt(const char* value);
  void set_pcgt(const char* value, size_t size);
  ::std::string* mutable_pcgt();
  ::std::string* release_pcgt();
  void set_allocated_pcgt(::std::string* pcgt);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .XmsgImOrgNodeInfo info = 5;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 5;
  const ::XmsgImOrgNodeInfo& info() const;
  ::XmsgImOrgNodeInfo* release_info();
  ::XmsgImOrgNodeInfo* mutable_info();
  void set_allocated_info(::XmsgImOrgNodeInfo* info);

  // uint64 ver = 6;
  void clear_ver();
  static const int kVerFieldNumber = 6;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // uint64 gts = 7;
  void clear_gts();
  static const int kGtsFieldNumber = 7;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // uint64 uts = 8;
  void clear_uts();
  static const int kUtsFieldNumber = 8;
  ::google::protobuf::uint64 uts() const;
  void set_uts(::google::protobuf::uint64 value);

  // bool enable = 4;
  void clear_enable();
  static const int kEnableFieldNumber = 4;
  bool enable() const;
  void set_enable(bool value);

  // @@protoc_insertion_point(class_scope:XmsgImOrgEventDept)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr pcgt_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::XmsgImOrgNodeInfo* info_;
  ::google::protobuf::uint64 ver_;
  ::google::protobuf::uint64 gts_;
  ::google::protobuf::uint64 uts_;
  bool enable_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEventDeptImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgEventDeptUsr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgEventDeptUsr) */ {
 public:
  XmsgImOrgEventDeptUsr();
  virtual ~XmsgImOrgEventDeptUsr();

  XmsgImOrgEventDeptUsr(const XmsgImOrgEventDeptUsr& from);

  inline XmsgImOrgEventDeptUsr& operator=(const XmsgImOrgEventDeptUsr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgEventDeptUsr(XmsgImOrgEventDeptUsr&& from) noexcept
    : XmsgImOrgEventDeptUsr() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgEventDeptUsr& operator=(XmsgImOrgEventDeptUsr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgEventDeptUsr& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgEventDeptUsr* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgEventDeptUsr*>(
               &_XmsgImOrgEventDeptUsr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(XmsgImOrgEventDeptUsr* other);
  friend void swap(XmsgImOrgEventDeptUsr& a, XmsgImOrgEventDeptUsr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgEventDeptUsr* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgEventDeptUsr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgEventDeptUsr& from);
  void MergeFrom(const XmsgImOrgEventDeptUsr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgEventDeptUsr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string dcgt = 1;
  void clear_dcgt();
  static const int kDcgtFieldNumber = 1;
  const ::std::string& dcgt() const;
  void set_dcgt(const ::std::string& value);
  #if LANG_CXX11
  void set_dcgt(::std::string&& value);
  #endif
  void set_dcgt(const char* value);
  void set_dcgt(const char* value, size_t size);
  ::std::string* mutable_dcgt();
  ::std::string* release_dcgt();
  void set_allocated_dcgt(::std::string* dcgt);

  // string ucgt = 2;
  void clear_ucgt();
  static const int kUcgtFieldNumber = 2;
  const ::std::string& ucgt() const;
  void set_ucgt(const ::std::string& value);
  #if LANG_CXX11
  void set_ucgt(::std::string&& value);
  #endif
  void set_ucgt(const char* value);
  void set_ucgt(const char* value, size_t size);
  ::std::string* mutable_ucgt();
  ::std::string* release_ucgt();
  void set_allocated_ucgt(::std::string* ucgt);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .XmsgImOrgNodeInfo info = 5;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 5;
  const ::XmsgImOrgNodeInfo& info() const;
  ::XmsgImOrgNodeInfo* release_info();
  ::XmsgImOrgNodeInfo* mutable_info();
  void set_allocated_info(::XmsgImOrgNodeInfo* info);

  // uint64 ver = 6;
  void clear_ver();
  static const int kVerFieldNumber = 6;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // uint64 gts = 7;
  void clear_gts();
  static const int kGtsFieldNumber = 7;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // uint64 uts = 8;
  void clear_uts();
  static const int kUtsFieldNumber = 8;
  ::google::protobuf::uint64 uts() const;
  void set_uts(::google::protobuf::uint64 value);

  // bool enable = 4;
  void clear_enable();
  static const int kEnableFieldNumber = 4;
  bool enable() const;
  void set_enable(bool value);

  // @@protoc_insertion_point(class_scope:XmsgImOrgEventDeptUsr)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dcgt_;
  ::google::protobuf::internal::ArenaStringPtr ucgt_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::XmsgImOrgNodeInfo* info_;
  ::google::protobuf::uint64 ver_;
  ::google::protobuf::uint64 gts_;
  ::google::protobuf::uint64 uts_;
  bool enable_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEventDeptUsrImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgEventUsr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgEventUsr) */ {
 public:
  XmsgImOrgEventUsr();
  virtual ~XmsgImOrgEventUsr();

  XmsgImOrgEventUsr(const XmsgImOrgEventUsr& from);

  inline XmsgImOrgEventUsr& operator=(const XmsgImOrgEventUsr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgEventUsr(XmsgImOrgEventUsr&& from) noexcept
    : XmsgImOrgEventUsr() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgEventUsr& operator=(XmsgImOrgEventUsr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgEventUsr& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgEventUsr* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgEventUsr*>(
               &_XmsgImOrgEventUsr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(XmsgImOrgEventUsr* other);
  friend void swap(XmsgImOrgEventUsr& a, XmsgImOrgEventUsr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgEventUsr* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgEventUsr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgEventUsr& from);
  void MergeFrom(const XmsgImOrgEventUsr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgEventUsr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .XmsgImOrgNodeInfo info = 4;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 4;
  const ::XmsgImOrgNodeInfo& info() const;
  ::XmsgImOrgNodeInfo* release_info();
  ::XmsgImOrgNodeInfo* mutable_info();
  void set_allocated_info(::XmsgImOrgNodeInfo* info);

  // uint64 ver = 5;
  void clear_ver();
  static const int kVerFieldNumber = 5;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // uint64 gts = 6;
  void clear_gts();
  static const int kGtsFieldNumber = 6;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // uint64 uts = 7;
  void clear_uts();
  static const int kUtsFieldNumber = 7;
  ::google::protobuf::uint64 uts() const;
  void set_uts(::google::protobuf::uint64 value);

  // bool enable = 3;
  void clear_enable();
  static const int kEnableFieldNumber = 3;
  bool enable() const;
  void set_enable(bool value);

  // @@protoc_insertion_point(class_scope:XmsgImOrgEventUsr)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::XmsgImOrgNodeInfo* info_;
  ::google::protobuf::uint64 ver_;
  ::google::protobuf::uint64 gts_;
  ::google::protobuf::uint64 uts_;
  bool enable_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgEventUsrImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgNodeInfo_KvEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImOrgNodeInfo_KvEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImOrgNodeInfo_KvEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImOrgNodeInfo_KvEntry_DoNotUse();
  XmsgImOrgNodeInfo_KvEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImOrgNodeInfo_KvEntry_DoNotUse& other);
  static const XmsgImOrgNodeInfo_KvEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImOrgNodeInfo_KvEntry_DoNotUse*>(&_XmsgImOrgNodeInfo_KvEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImOrgNodeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgNodeInfo) */ {
 public:
  XmsgImOrgNodeInfo();
  virtual ~XmsgImOrgNodeInfo();

  XmsgImOrgNodeInfo(const XmsgImOrgNodeInfo& from);

  inline XmsgImOrgNodeInfo& operator=(const XmsgImOrgNodeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgNodeInfo(XmsgImOrgNodeInfo&& from) noexcept
    : XmsgImOrgNodeInfo() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgNodeInfo& operator=(XmsgImOrgNodeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgNodeInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgNodeInfo* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgNodeInfo*>(
               &_XmsgImOrgNodeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(XmsgImOrgNodeInfo* other);
  friend void swap(XmsgImOrgNodeInfo& a, XmsgImOrgNodeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgNodeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgNodeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgNodeInfo& from);
  void MergeFrom(const XmsgImOrgNodeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgNodeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> kv = 1;
  int kv_size() const;
  void clear_kv();
  static const int kKvFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      kv() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_kv();

  // @@protoc_insertion_point(class_scope:XmsgImOrgNodeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImOrgNodeInfo_KvEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > kv_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeInfoImpl();
};
// -------------------------------------------------------------------

class XmsgImOrgNodeChild : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImOrgNodeChild) */ {
 public:
  XmsgImOrgNodeChild();
  virtual ~XmsgImOrgNodeChild();

  XmsgImOrgNodeChild(const XmsgImOrgNodeChild& from);

  inline XmsgImOrgNodeChild& operator=(const XmsgImOrgNodeChild& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImOrgNodeChild(XmsgImOrgNodeChild&& from) noexcept
    : XmsgImOrgNodeChild() {
    *this = ::std::move(from);
  }

  inline XmsgImOrgNodeChild& operator=(XmsgImOrgNodeChild&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImOrgNodeChild& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImOrgNodeChild* internal_default_instance() {
    return reinterpret_cast<const XmsgImOrgNodeChild*>(
               &_XmsgImOrgNodeChild_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(XmsgImOrgNodeChild* other);
  friend void swap(XmsgImOrgNodeChild& a, XmsgImOrgNodeChild& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImOrgNodeChild* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImOrgNodeChild* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImOrgNodeChild& from);
  void MergeFrom(const XmsgImOrgNodeChild& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImOrgNodeChild* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .XmsgImOrgNodeInfo info = 5;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 5;
  const ::XmsgImOrgNodeInfo& info() const;
  ::XmsgImOrgNodeInfo* release_info();
  ::XmsgImOrgNodeInfo* mutable_info();
  void set_allocated_info(::XmsgImOrgNodeInfo* info);

  // bool enable = 3;
  void clear_enable();
  static const int kEnableFieldNumber = 3;
  bool enable() const;
  void set_enable(bool value);

  // .XmsgImOrgNodeType type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::XmsgImOrgNodeType type() const;
  void set_type(::XmsgImOrgNodeType value);

  // uint64 ver = 6;
  void clear_ver();
  static const int kVerFieldNumber = 6;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // uint64 gts = 7;
  void clear_gts();
  static const int kGtsFieldNumber = 7;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // uint64 uts = 8;
  void clear_uts();
  static const int kUtsFieldNumber = 8;
  ::google::protobuf::uint64 uts() const;
  void set_uts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImOrgNodeChild)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::XmsgImOrgNodeInfo* info_;
  bool enable_;
  int type_;
  ::google::protobuf::uint64 ver_;
  ::google::protobuf::uint64 gts_;
  ::google::protobuf::uint64 uts_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dorg_2eproto::InitDefaultsXmsgImOrgNodeChildImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// XmsgImOrgSyncSubReq

// uint64 ver4dept = 1;
inline void XmsgImOrgSyncSubReq::clear_ver4dept() {
  ver4dept_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgSyncSubReq::ver4dept() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgSyncSubReq.ver4dept)
  return ver4dept_;
}
inline void XmsgImOrgSyncSubReq::set_ver4dept(::google::protobuf::uint64 value) {
  
  ver4dept_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgSyncSubReq.ver4dept)
}

// uint64 ver4deptUsr = 2;
inline void XmsgImOrgSyncSubReq::clear_ver4deptusr() {
  ver4deptusr_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgSyncSubReq::ver4deptusr() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgSyncSubReq.ver4deptUsr)
  return ver4deptusr_;
}
inline void XmsgImOrgSyncSubReq::set_ver4deptusr(::google::protobuf::uint64 value) {
  
  ver4deptusr_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgSyncSubReq.ver4deptUsr)
}

// uint64 ver4usr = 3;
inline void XmsgImOrgSyncSubReq::clear_ver4usr() {
  ver4usr_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgSyncSubReq::ver4usr() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgSyncSubReq.ver4usr)
  return ver4usr_;
}
inline void XmsgImOrgSyncSubReq::set_ver4usr(::google::protobuf::uint64 value) {
  
  ver4usr_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgSyncSubReq.ver4usr)
}

// -------------------------------------------------------------------

// XmsgImOrgSyncSubRsp

// uint64 ver4deptLatest = 1;
inline void XmsgImOrgSyncSubRsp::clear_ver4deptlatest() {
  ver4deptlatest_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgSyncSubRsp::ver4deptlatest() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgSyncSubRsp.ver4deptLatest)
  return ver4deptlatest_;
}
inline void XmsgImOrgSyncSubRsp::set_ver4deptlatest(::google::protobuf::uint64 value) {
  
  ver4deptlatest_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgSyncSubRsp.ver4deptLatest)
}

// uint64 ver4deptUsrLatest = 2;
inline void XmsgImOrgSyncSubRsp::clear_ver4deptusrlatest() {
  ver4deptusrlatest_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgSyncSubRsp::ver4deptusrlatest() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgSyncSubRsp.ver4deptUsrLatest)
  return ver4deptusrlatest_;
}
inline void XmsgImOrgSyncSubRsp::set_ver4deptusrlatest(::google::protobuf::uint64 value) {
  
  ver4deptusrlatest_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgSyncSubRsp.ver4deptUsrLatest)
}

// uint64 ver4usrLatest = 3;
inline void XmsgImOrgSyncSubRsp::clear_ver4usrlatest() {
  ver4usrlatest_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgSyncSubRsp::ver4usrlatest() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgSyncSubRsp.ver4usrLatest)
  return ver4usrlatest_;
}
inline void XmsgImOrgSyncSubRsp::set_ver4usrlatest(::google::protobuf::uint64 value) {
  
  ver4usrlatest_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgSyncSubRsp.ver4usrLatest)
}

// -------------------------------------------------------------------

// XmsgImOrgSyncPubReq

// repeated .XmsgImOrgEvent event = 1;
inline int XmsgImOrgSyncPubReq::event_size() const {
  return event_.size();
}
inline void XmsgImOrgSyncPubReq::clear_event() {
  event_.Clear();
}
inline const ::XmsgImOrgEvent& XmsgImOrgSyncPubReq::event(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImOrgSyncPubReq.event)
  return event_.Get(index);
}
inline ::XmsgImOrgEvent* XmsgImOrgSyncPubReq::mutable_event(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImOrgSyncPubReq.event)
  return event_.Mutable(index);
}
inline ::XmsgImOrgEvent* XmsgImOrgSyncPubReq::add_event() {
  // @@protoc_insertion_point(field_add:XmsgImOrgSyncPubReq.event)
  return event_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XmsgImOrgEvent >*
XmsgImOrgSyncPubReq::mutable_event() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImOrgSyncPubReq.event)
  return &event_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XmsgImOrgEvent >&
XmsgImOrgSyncPubReq::event() const {
  // @@protoc_insertion_point(field_list:XmsgImOrgSyncPubReq.event)
  return event_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImOrgSyncPubRsp

// map<string, string> ext = 1;
inline int XmsgImOrgSyncPubRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImOrgSyncPubRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImOrgSyncPubRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImOrgSyncPubRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImOrgSyncPubRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImOrgSyncPubRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImOrgChangedNotice

// .XmsgImOrgEvent event = 1;
inline bool XmsgImOrgChangedNotice::has_event() const {
  return this != internal_default_instance() && event_ != NULL;
}
inline void XmsgImOrgChangedNotice::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
}
inline const ::XmsgImOrgEvent& XmsgImOrgChangedNotice::event() const {
  const ::XmsgImOrgEvent* p = event_;
  // @@protoc_insertion_point(field_get:XmsgImOrgChangedNotice.event)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImOrgEvent*>(
      &::_XmsgImOrgEvent_default_instance_);
}
inline ::XmsgImOrgEvent* XmsgImOrgChangedNotice::release_event() {
  // @@protoc_insertion_point(field_release:XmsgImOrgChangedNotice.event)
  
  ::XmsgImOrgEvent* temp = event_;
  event_ = NULL;
  return temp;
}
inline ::XmsgImOrgEvent* XmsgImOrgChangedNotice::mutable_event() {
  
  if (event_ == NULL) {
    event_ = new ::XmsgImOrgEvent;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImOrgChangedNotice.event)
  return event_;
}
inline void XmsgImOrgChangedNotice::set_allocated_event(::XmsgImOrgEvent* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_;
  }
  if (event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    
  } else {
    
  }
  event_ = event;
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgChangedNotice.event)
}

// -------------------------------------------------------------------

// XmsgImOrgNodeChildQueryReq

// string cgt = 1;
inline void XmsgImOrgNodeChildQueryReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgNodeChildQueryReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeChildQueryReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImOrgNodeChildQueryReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeChildQueryReq.cgt)
}
#if LANG_CXX11
inline void XmsgImOrgNodeChildQueryReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgNodeChildQueryReq.cgt)
}
#endif
inline void XmsgImOrgNodeChildQueryReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgNodeChildQueryReq.cgt)
}
inline void XmsgImOrgNodeChildQueryReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgNodeChildQueryReq.cgt)
}
inline ::std::string* XmsgImOrgNodeChildQueryReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgNodeChildQueryReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgNodeChildQueryReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImOrgNodeChildQueryReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgNodeChildQueryReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgNodeChildQueryReq.cgt)
}

// -------------------------------------------------------------------

// XmsgImOrgNodeChildQueryRsp

// repeated .XmsgImOrgNodeChild child = 1;
inline int XmsgImOrgNodeChildQueryRsp::child_size() const {
  return child_.size();
}
inline void XmsgImOrgNodeChildQueryRsp::clear_child() {
  child_.Clear();
}
inline const ::XmsgImOrgNodeChild& XmsgImOrgNodeChildQueryRsp::child(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeChildQueryRsp.child)
  return child_.Get(index);
}
inline ::XmsgImOrgNodeChild* XmsgImOrgNodeChildQueryRsp::mutable_child(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImOrgNodeChildQueryRsp.child)
  return child_.Mutable(index);
}
inline ::XmsgImOrgNodeChild* XmsgImOrgNodeChildQueryRsp::add_child() {
  // @@protoc_insertion_point(field_add:XmsgImOrgNodeChildQueryRsp.child)
  return child_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XmsgImOrgNodeChild >*
XmsgImOrgNodeChildQueryRsp::mutable_child() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImOrgNodeChildQueryRsp.child)
  return &child_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XmsgImOrgNodeChild >&
XmsgImOrgNodeChildQueryRsp::child() const {
  // @@protoc_insertion_point(field_list:XmsgImOrgNodeChildQueryRsp.child)
  return child_;
}

// -------------------------------------------------------------------

// XmsgImOrgNodeDeptUsrQueryReq

// string dcgt = 1;
inline void XmsgImOrgNodeDeptUsrQueryReq::clear_dcgt() {
  dcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgNodeDeptUsrQueryReq::dcgt() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeDeptUsrQueryReq.dcgt)
  return dcgt_.GetNoArena();
}
inline void XmsgImOrgNodeDeptUsrQueryReq::set_dcgt(const ::std::string& value) {
  
  dcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeDeptUsrQueryReq.dcgt)
}
#if LANG_CXX11
inline void XmsgImOrgNodeDeptUsrQueryReq::set_dcgt(::std::string&& value) {
  
  dcgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgNodeDeptUsrQueryReq.dcgt)
}
#endif
inline void XmsgImOrgNodeDeptUsrQueryReq::set_dcgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgNodeDeptUsrQueryReq.dcgt)
}
inline void XmsgImOrgNodeDeptUsrQueryReq::set_dcgt(const char* value, size_t size) {
  
  dcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgNodeDeptUsrQueryReq.dcgt)
}
inline ::std::string* XmsgImOrgNodeDeptUsrQueryReq::mutable_dcgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgNodeDeptUsrQueryReq.dcgt)
  return dcgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgNodeDeptUsrQueryReq::release_dcgt() {
  // @@protoc_insertion_point(field_release:XmsgImOrgNodeDeptUsrQueryReq.dcgt)
  
  return dcgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgNodeDeptUsrQueryReq::set_allocated_dcgt(::std::string* dcgt) {
  if (dcgt != NULL) {
    
  } else {
    
  }
  dcgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dcgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgNodeDeptUsrQueryReq.dcgt)
}

// string ucgt = 2;
inline void XmsgImOrgNodeDeptUsrQueryReq::clear_ucgt() {
  ucgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgNodeDeptUsrQueryReq::ucgt() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeDeptUsrQueryReq.ucgt)
  return ucgt_.GetNoArena();
}
inline void XmsgImOrgNodeDeptUsrQueryReq::set_ucgt(const ::std::string& value) {
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeDeptUsrQueryReq.ucgt)
}
#if LANG_CXX11
inline void XmsgImOrgNodeDeptUsrQueryReq::set_ucgt(::std::string&& value) {
  
  ucgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgNodeDeptUsrQueryReq.ucgt)
}
#endif
inline void XmsgImOrgNodeDeptUsrQueryReq::set_ucgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgNodeDeptUsrQueryReq.ucgt)
}
inline void XmsgImOrgNodeDeptUsrQueryReq::set_ucgt(const char* value, size_t size) {
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgNodeDeptUsrQueryReq.ucgt)
}
inline ::std::string* XmsgImOrgNodeDeptUsrQueryReq::mutable_ucgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgNodeDeptUsrQueryReq.ucgt)
  return ucgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgNodeDeptUsrQueryReq::release_ucgt() {
  // @@protoc_insertion_point(field_release:XmsgImOrgNodeDeptUsrQueryReq.ucgt)
  
  return ucgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgNodeDeptUsrQueryReq::set_allocated_ucgt(::std::string* ucgt) {
  if (ucgt != NULL) {
    
  } else {
    
  }
  ucgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ucgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgNodeDeptUsrQueryReq.ucgt)
}

// -------------------------------------------------------------------

// XmsgImOrgNodeDeptUsrQueryRsp

// string name = 2;
inline void XmsgImOrgNodeDeptUsrQueryRsp::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgNodeDeptUsrQueryRsp::name() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeDeptUsrQueryRsp.name)
  return name_.GetNoArena();
}
inline void XmsgImOrgNodeDeptUsrQueryRsp::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeDeptUsrQueryRsp.name)
}
#if LANG_CXX11
inline void XmsgImOrgNodeDeptUsrQueryRsp::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgNodeDeptUsrQueryRsp.name)
}
#endif
inline void XmsgImOrgNodeDeptUsrQueryRsp::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgNodeDeptUsrQueryRsp.name)
}
inline void XmsgImOrgNodeDeptUsrQueryRsp::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgNodeDeptUsrQueryRsp.name)
}
inline ::std::string* XmsgImOrgNodeDeptUsrQueryRsp::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgNodeDeptUsrQueryRsp.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgNodeDeptUsrQueryRsp::release_name() {
  // @@protoc_insertion_point(field_release:XmsgImOrgNodeDeptUsrQueryRsp.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgNodeDeptUsrQueryRsp::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgNodeDeptUsrQueryRsp.name)
}

// bool enable = 3;
inline void XmsgImOrgNodeDeptUsrQueryRsp::clear_enable() {
  enable_ = false;
}
inline bool XmsgImOrgNodeDeptUsrQueryRsp::enable() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeDeptUsrQueryRsp.enable)
  return enable_;
}
inline void XmsgImOrgNodeDeptUsrQueryRsp::set_enable(bool value) {
  
  enable_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeDeptUsrQueryRsp.enable)
}

// .XmsgImOrgNodeInfo info = 4;
inline bool XmsgImOrgNodeDeptUsrQueryRsp::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void XmsgImOrgNodeDeptUsrQueryRsp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
inline const ::XmsgImOrgNodeInfo& XmsgImOrgNodeDeptUsrQueryRsp::info() const {
  const ::XmsgImOrgNodeInfo* p = info_;
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeDeptUsrQueryRsp.info)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImOrgNodeInfo*>(
      &::_XmsgImOrgNodeInfo_default_instance_);
}
inline ::XmsgImOrgNodeInfo* XmsgImOrgNodeDeptUsrQueryRsp::release_info() {
  // @@protoc_insertion_point(field_release:XmsgImOrgNodeDeptUsrQueryRsp.info)
  
  ::XmsgImOrgNodeInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::XmsgImOrgNodeInfo* XmsgImOrgNodeDeptUsrQueryRsp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::XmsgImOrgNodeInfo;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImOrgNodeDeptUsrQueryRsp.info)
  return info_;
}
inline void XmsgImOrgNodeDeptUsrQueryRsp::set_allocated_info(::XmsgImOrgNodeInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgNodeDeptUsrQueryRsp.info)
}

// uint64 ver = 5;
inline void XmsgImOrgNodeDeptUsrQueryRsp::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgNodeDeptUsrQueryRsp::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeDeptUsrQueryRsp.ver)
  return ver_;
}
inline void XmsgImOrgNodeDeptUsrQueryRsp::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeDeptUsrQueryRsp.ver)
}

// uint64 gts = 6;
inline void XmsgImOrgNodeDeptUsrQueryRsp::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgNodeDeptUsrQueryRsp::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeDeptUsrQueryRsp.gts)
  return gts_;
}
inline void XmsgImOrgNodeDeptUsrQueryRsp::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeDeptUsrQueryRsp.gts)
}

// uint64 uts = 7;
inline void XmsgImOrgNodeDeptUsrQueryRsp::clear_uts() {
  uts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgNodeDeptUsrQueryRsp::uts() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeDeptUsrQueryRsp.uts)
  return uts_;
}
inline void XmsgImOrgNodeDeptUsrQueryRsp::set_uts(::google::protobuf::uint64 value) {
  
  uts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeDeptUsrQueryRsp.uts)
}

// -------------------------------------------------------------------

// XmsgImOrgNodeQueryReq

// string cgt = 1;
inline void XmsgImOrgNodeQueryReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgNodeQueryReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeQueryReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImOrgNodeQueryReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeQueryReq.cgt)
}
#if LANG_CXX11
inline void XmsgImOrgNodeQueryReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgNodeQueryReq.cgt)
}
#endif
inline void XmsgImOrgNodeQueryReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgNodeQueryReq.cgt)
}
inline void XmsgImOrgNodeQueryReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgNodeQueryReq.cgt)
}
inline ::std::string* XmsgImOrgNodeQueryReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgNodeQueryReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgNodeQueryReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImOrgNodeQueryReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgNodeQueryReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgNodeQueryReq.cgt)
}

// -------------------------------------------------------------------

// XmsgImOrgNodeQueryRsp

// string pgt = 1;
inline void XmsgImOrgNodeQueryRsp::clear_pgt() {
  pgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgNodeQueryRsp::pgt() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeQueryRsp.pgt)
  return pgt_.GetNoArena();
}
inline void XmsgImOrgNodeQueryRsp::set_pgt(const ::std::string& value) {
  
  pgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeQueryRsp.pgt)
}
#if LANG_CXX11
inline void XmsgImOrgNodeQueryRsp::set_pgt(::std::string&& value) {
  
  pgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgNodeQueryRsp.pgt)
}
#endif
inline void XmsgImOrgNodeQueryRsp::set_pgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgNodeQueryRsp.pgt)
}
inline void XmsgImOrgNodeQueryRsp::set_pgt(const char* value, size_t size) {
  
  pgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgNodeQueryRsp.pgt)
}
inline ::std::string* XmsgImOrgNodeQueryRsp::mutable_pgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgNodeQueryRsp.pgt)
  return pgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgNodeQueryRsp::release_pgt() {
  // @@protoc_insertion_point(field_release:XmsgImOrgNodeQueryRsp.pgt)
  
  return pgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgNodeQueryRsp::set_allocated_pgt(::std::string* pgt) {
  if (pgt != NULL) {
    
  } else {
    
  }
  pgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgNodeQueryRsp.pgt)
}

// string name = 2;
inline void XmsgImOrgNodeQueryRsp::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgNodeQueryRsp::name() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeQueryRsp.name)
  return name_.GetNoArena();
}
inline void XmsgImOrgNodeQueryRsp::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeQueryRsp.name)
}
#if LANG_CXX11
inline void XmsgImOrgNodeQueryRsp::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgNodeQueryRsp.name)
}
#endif
inline void XmsgImOrgNodeQueryRsp::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgNodeQueryRsp.name)
}
inline void XmsgImOrgNodeQueryRsp::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgNodeQueryRsp.name)
}
inline ::std::string* XmsgImOrgNodeQueryRsp::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgNodeQueryRsp.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgNodeQueryRsp::release_name() {
  // @@protoc_insertion_point(field_release:XmsgImOrgNodeQueryRsp.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgNodeQueryRsp::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgNodeQueryRsp.name)
}

// bool enable = 3;
inline void XmsgImOrgNodeQueryRsp::clear_enable() {
  enable_ = false;
}
inline bool XmsgImOrgNodeQueryRsp::enable() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeQueryRsp.enable)
  return enable_;
}
inline void XmsgImOrgNodeQueryRsp::set_enable(bool value) {
  
  enable_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeQueryRsp.enable)
}

// .XmsgImOrgNodeType type = 4;
inline void XmsgImOrgNodeQueryRsp::clear_type() {
  type_ = 0;
}
inline ::XmsgImOrgNodeType XmsgImOrgNodeQueryRsp::type() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeQueryRsp.type)
  return static_cast< ::XmsgImOrgNodeType >(type_);
}
inline void XmsgImOrgNodeQueryRsp::set_type(::XmsgImOrgNodeType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeQueryRsp.type)
}

// .XmsgImOrgNodeInfo info = 5;
inline bool XmsgImOrgNodeQueryRsp::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void XmsgImOrgNodeQueryRsp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
inline const ::XmsgImOrgNodeInfo& XmsgImOrgNodeQueryRsp::info() const {
  const ::XmsgImOrgNodeInfo* p = info_;
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeQueryRsp.info)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImOrgNodeInfo*>(
      &::_XmsgImOrgNodeInfo_default_instance_);
}
inline ::XmsgImOrgNodeInfo* XmsgImOrgNodeQueryRsp::release_info() {
  // @@protoc_insertion_point(field_release:XmsgImOrgNodeQueryRsp.info)
  
  ::XmsgImOrgNodeInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::XmsgImOrgNodeInfo* XmsgImOrgNodeQueryRsp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::XmsgImOrgNodeInfo;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImOrgNodeQueryRsp.info)
  return info_;
}
inline void XmsgImOrgNodeQueryRsp::set_allocated_info(::XmsgImOrgNodeInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgNodeQueryRsp.info)
}

// uint64 ver = 6;
inline void XmsgImOrgNodeQueryRsp::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgNodeQueryRsp::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeQueryRsp.ver)
  return ver_;
}
inline void XmsgImOrgNodeQueryRsp::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeQueryRsp.ver)
}

// uint64 gts = 7;
inline void XmsgImOrgNodeQueryRsp::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgNodeQueryRsp::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeQueryRsp.gts)
  return gts_;
}
inline void XmsgImOrgNodeQueryRsp::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeQueryRsp.gts)
}

// uint64 uts = 8;
inline void XmsgImOrgNodeQueryRsp::clear_uts() {
  uts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgNodeQueryRsp::uts() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeQueryRsp.uts)
  return uts_;
}
inline void XmsgImOrgNodeQueryRsp::set_uts(::google::protobuf::uint64 value) {
  
  uts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeQueryRsp.uts)
}

// -------------------------------------------------------------------

// XmsgImOrgEvent

// .XmsgImOrgEventDept dept = 1;
inline bool XmsgImOrgEvent::has_dept() const {
  return this != internal_default_instance() && dept_ != NULL;
}
inline void XmsgImOrgEvent::clear_dept() {
  if (GetArenaNoVirtual() == NULL && dept_ != NULL) {
    delete dept_;
  }
  dept_ = NULL;
}
inline const ::XmsgImOrgEventDept& XmsgImOrgEvent::dept() const {
  const ::XmsgImOrgEventDept* p = dept_;
  // @@protoc_insertion_point(field_get:XmsgImOrgEvent.dept)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImOrgEventDept*>(
      &::_XmsgImOrgEventDept_default_instance_);
}
inline ::XmsgImOrgEventDept* XmsgImOrgEvent::release_dept() {
  // @@protoc_insertion_point(field_release:XmsgImOrgEvent.dept)
  
  ::XmsgImOrgEventDept* temp = dept_;
  dept_ = NULL;
  return temp;
}
inline ::XmsgImOrgEventDept* XmsgImOrgEvent::mutable_dept() {
  
  if (dept_ == NULL) {
    dept_ = new ::XmsgImOrgEventDept;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImOrgEvent.dept)
  return dept_;
}
inline void XmsgImOrgEvent::set_allocated_dept(::XmsgImOrgEventDept* dept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dept_;
  }
  if (dept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dept, submessage_arena);
    }
    
  } else {
    
  }
  dept_ = dept;
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgEvent.dept)
}

// .XmsgImOrgEventDeptUsr deptUsr = 2;
inline bool XmsgImOrgEvent::has_deptusr() const {
  return this != internal_default_instance() && deptusr_ != NULL;
}
inline void XmsgImOrgEvent::clear_deptusr() {
  if (GetArenaNoVirtual() == NULL && deptusr_ != NULL) {
    delete deptusr_;
  }
  deptusr_ = NULL;
}
inline const ::XmsgImOrgEventDeptUsr& XmsgImOrgEvent::deptusr() const {
  const ::XmsgImOrgEventDeptUsr* p = deptusr_;
  // @@protoc_insertion_point(field_get:XmsgImOrgEvent.deptUsr)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImOrgEventDeptUsr*>(
      &::_XmsgImOrgEventDeptUsr_default_instance_);
}
inline ::XmsgImOrgEventDeptUsr* XmsgImOrgEvent::release_deptusr() {
  // @@protoc_insertion_point(field_release:XmsgImOrgEvent.deptUsr)
  
  ::XmsgImOrgEventDeptUsr* temp = deptusr_;
  deptusr_ = NULL;
  return temp;
}
inline ::XmsgImOrgEventDeptUsr* XmsgImOrgEvent::mutable_deptusr() {
  
  if (deptusr_ == NULL) {
    deptusr_ = new ::XmsgImOrgEventDeptUsr;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImOrgEvent.deptUsr)
  return deptusr_;
}
inline void XmsgImOrgEvent::set_allocated_deptusr(::XmsgImOrgEventDeptUsr* deptusr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deptusr_;
  }
  if (deptusr) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deptusr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deptusr, submessage_arena);
    }
    
  } else {
    
  }
  deptusr_ = deptusr;
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgEvent.deptUsr)
}

// .XmsgImOrgEventUsr usr = 3;
inline bool XmsgImOrgEvent::has_usr() const {
  return this != internal_default_instance() && usr_ != NULL;
}
inline void XmsgImOrgEvent::clear_usr() {
  if (GetArenaNoVirtual() == NULL && usr_ != NULL) {
    delete usr_;
  }
  usr_ = NULL;
}
inline const ::XmsgImOrgEventUsr& XmsgImOrgEvent::usr() const {
  const ::XmsgImOrgEventUsr* p = usr_;
  // @@protoc_insertion_point(field_get:XmsgImOrgEvent.usr)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImOrgEventUsr*>(
      &::_XmsgImOrgEventUsr_default_instance_);
}
inline ::XmsgImOrgEventUsr* XmsgImOrgEvent::release_usr() {
  // @@protoc_insertion_point(field_release:XmsgImOrgEvent.usr)
  
  ::XmsgImOrgEventUsr* temp = usr_;
  usr_ = NULL;
  return temp;
}
inline ::XmsgImOrgEventUsr* XmsgImOrgEvent::mutable_usr() {
  
  if (usr_ == NULL) {
    usr_ = new ::XmsgImOrgEventUsr;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImOrgEvent.usr)
  return usr_;
}
inline void XmsgImOrgEvent::set_allocated_usr(::XmsgImOrgEventUsr* usr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete usr_;
  }
  if (usr) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      usr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, usr, submessage_arena);
    }
    
  } else {
    
  }
  usr_ = usr;
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgEvent.usr)
}

// -------------------------------------------------------------------

// XmsgImOrgEventDept

// string cgt = 1;
inline void XmsgImOrgEventDept::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgEventDept::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDept.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImOrgEventDept::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgEventDept.cgt)
}
#if LANG_CXX11
inline void XmsgImOrgEventDept::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgEventDept.cgt)
}
#endif
inline void XmsgImOrgEventDept::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgEventDept.cgt)
}
inline void XmsgImOrgEventDept::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgEventDept.cgt)
}
inline ::std::string* XmsgImOrgEventDept::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgEventDept.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgEventDept::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImOrgEventDept.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgEventDept::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgEventDept.cgt)
}

// string pcgt = 2;
inline void XmsgImOrgEventDept::clear_pcgt() {
  pcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgEventDept::pcgt() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDept.pcgt)
  return pcgt_.GetNoArena();
}
inline void XmsgImOrgEventDept::set_pcgt(const ::std::string& value) {
  
  pcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgEventDept.pcgt)
}
#if LANG_CXX11
inline void XmsgImOrgEventDept::set_pcgt(::std::string&& value) {
  
  pcgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgEventDept.pcgt)
}
#endif
inline void XmsgImOrgEventDept::set_pcgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgEventDept.pcgt)
}
inline void XmsgImOrgEventDept::set_pcgt(const char* value, size_t size) {
  
  pcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgEventDept.pcgt)
}
inline ::std::string* XmsgImOrgEventDept::mutable_pcgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgEventDept.pcgt)
  return pcgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgEventDept::release_pcgt() {
  // @@protoc_insertion_point(field_release:XmsgImOrgEventDept.pcgt)
  
  return pcgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgEventDept::set_allocated_pcgt(::std::string* pcgt) {
  if (pcgt != NULL) {
    
  } else {
    
  }
  pcgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pcgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgEventDept.pcgt)
}

// string name = 3;
inline void XmsgImOrgEventDept::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgEventDept::name() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDept.name)
  return name_.GetNoArena();
}
inline void XmsgImOrgEventDept::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgEventDept.name)
}
#if LANG_CXX11
inline void XmsgImOrgEventDept::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgEventDept.name)
}
#endif
inline void XmsgImOrgEventDept::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgEventDept.name)
}
inline void XmsgImOrgEventDept::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgEventDept.name)
}
inline ::std::string* XmsgImOrgEventDept::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgEventDept.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgEventDept::release_name() {
  // @@protoc_insertion_point(field_release:XmsgImOrgEventDept.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgEventDept::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgEventDept.name)
}

// bool enable = 4;
inline void XmsgImOrgEventDept::clear_enable() {
  enable_ = false;
}
inline bool XmsgImOrgEventDept::enable() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDept.enable)
  return enable_;
}
inline void XmsgImOrgEventDept::set_enable(bool value) {
  
  enable_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgEventDept.enable)
}

// .XmsgImOrgNodeInfo info = 5;
inline bool XmsgImOrgEventDept::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void XmsgImOrgEventDept::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
inline const ::XmsgImOrgNodeInfo& XmsgImOrgEventDept::info() const {
  const ::XmsgImOrgNodeInfo* p = info_;
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDept.info)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImOrgNodeInfo*>(
      &::_XmsgImOrgNodeInfo_default_instance_);
}
inline ::XmsgImOrgNodeInfo* XmsgImOrgEventDept::release_info() {
  // @@protoc_insertion_point(field_release:XmsgImOrgEventDept.info)
  
  ::XmsgImOrgNodeInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::XmsgImOrgNodeInfo* XmsgImOrgEventDept::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::XmsgImOrgNodeInfo;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImOrgEventDept.info)
  return info_;
}
inline void XmsgImOrgEventDept::set_allocated_info(::XmsgImOrgNodeInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgEventDept.info)
}

// uint64 ver = 6;
inline void XmsgImOrgEventDept::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgEventDept::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDept.ver)
  return ver_;
}
inline void XmsgImOrgEventDept::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgEventDept.ver)
}

// uint64 gts = 7;
inline void XmsgImOrgEventDept::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgEventDept::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDept.gts)
  return gts_;
}
inline void XmsgImOrgEventDept::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgEventDept.gts)
}

// uint64 uts = 8;
inline void XmsgImOrgEventDept::clear_uts() {
  uts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgEventDept::uts() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDept.uts)
  return uts_;
}
inline void XmsgImOrgEventDept::set_uts(::google::protobuf::uint64 value) {
  
  uts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgEventDept.uts)
}

// -------------------------------------------------------------------

// XmsgImOrgEventDeptUsr

// string dcgt = 1;
inline void XmsgImOrgEventDeptUsr::clear_dcgt() {
  dcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgEventDeptUsr::dcgt() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDeptUsr.dcgt)
  return dcgt_.GetNoArena();
}
inline void XmsgImOrgEventDeptUsr::set_dcgt(const ::std::string& value) {
  
  dcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgEventDeptUsr.dcgt)
}
#if LANG_CXX11
inline void XmsgImOrgEventDeptUsr::set_dcgt(::std::string&& value) {
  
  dcgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgEventDeptUsr.dcgt)
}
#endif
inline void XmsgImOrgEventDeptUsr::set_dcgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgEventDeptUsr.dcgt)
}
inline void XmsgImOrgEventDeptUsr::set_dcgt(const char* value, size_t size) {
  
  dcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgEventDeptUsr.dcgt)
}
inline ::std::string* XmsgImOrgEventDeptUsr::mutable_dcgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgEventDeptUsr.dcgt)
  return dcgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgEventDeptUsr::release_dcgt() {
  // @@protoc_insertion_point(field_release:XmsgImOrgEventDeptUsr.dcgt)
  
  return dcgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgEventDeptUsr::set_allocated_dcgt(::std::string* dcgt) {
  if (dcgt != NULL) {
    
  } else {
    
  }
  dcgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dcgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgEventDeptUsr.dcgt)
}

// string ucgt = 2;
inline void XmsgImOrgEventDeptUsr::clear_ucgt() {
  ucgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgEventDeptUsr::ucgt() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDeptUsr.ucgt)
  return ucgt_.GetNoArena();
}
inline void XmsgImOrgEventDeptUsr::set_ucgt(const ::std::string& value) {
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgEventDeptUsr.ucgt)
}
#if LANG_CXX11
inline void XmsgImOrgEventDeptUsr::set_ucgt(::std::string&& value) {
  
  ucgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgEventDeptUsr.ucgt)
}
#endif
inline void XmsgImOrgEventDeptUsr::set_ucgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgEventDeptUsr.ucgt)
}
inline void XmsgImOrgEventDeptUsr::set_ucgt(const char* value, size_t size) {
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgEventDeptUsr.ucgt)
}
inline ::std::string* XmsgImOrgEventDeptUsr::mutable_ucgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgEventDeptUsr.ucgt)
  return ucgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgEventDeptUsr::release_ucgt() {
  // @@protoc_insertion_point(field_release:XmsgImOrgEventDeptUsr.ucgt)
  
  return ucgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgEventDeptUsr::set_allocated_ucgt(::std::string* ucgt) {
  if (ucgt != NULL) {
    
  } else {
    
  }
  ucgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ucgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgEventDeptUsr.ucgt)
}

// string name = 3;
inline void XmsgImOrgEventDeptUsr::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgEventDeptUsr::name() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDeptUsr.name)
  return name_.GetNoArena();
}
inline void XmsgImOrgEventDeptUsr::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgEventDeptUsr.name)
}
#if LANG_CXX11
inline void XmsgImOrgEventDeptUsr::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgEventDeptUsr.name)
}
#endif
inline void XmsgImOrgEventDeptUsr::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgEventDeptUsr.name)
}
inline void XmsgImOrgEventDeptUsr::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgEventDeptUsr.name)
}
inline ::std::string* XmsgImOrgEventDeptUsr::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgEventDeptUsr.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgEventDeptUsr::release_name() {
  // @@protoc_insertion_point(field_release:XmsgImOrgEventDeptUsr.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgEventDeptUsr::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgEventDeptUsr.name)
}

// bool enable = 4;
inline void XmsgImOrgEventDeptUsr::clear_enable() {
  enable_ = false;
}
inline bool XmsgImOrgEventDeptUsr::enable() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDeptUsr.enable)
  return enable_;
}
inline void XmsgImOrgEventDeptUsr::set_enable(bool value) {
  
  enable_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgEventDeptUsr.enable)
}

// .XmsgImOrgNodeInfo info = 5;
inline bool XmsgImOrgEventDeptUsr::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void XmsgImOrgEventDeptUsr::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
inline const ::XmsgImOrgNodeInfo& XmsgImOrgEventDeptUsr::info() const {
  const ::XmsgImOrgNodeInfo* p = info_;
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDeptUsr.info)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImOrgNodeInfo*>(
      &::_XmsgImOrgNodeInfo_default_instance_);
}
inline ::XmsgImOrgNodeInfo* XmsgImOrgEventDeptUsr::release_info() {
  // @@protoc_insertion_point(field_release:XmsgImOrgEventDeptUsr.info)
  
  ::XmsgImOrgNodeInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::XmsgImOrgNodeInfo* XmsgImOrgEventDeptUsr::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::XmsgImOrgNodeInfo;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImOrgEventDeptUsr.info)
  return info_;
}
inline void XmsgImOrgEventDeptUsr::set_allocated_info(::XmsgImOrgNodeInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgEventDeptUsr.info)
}

// uint64 ver = 6;
inline void XmsgImOrgEventDeptUsr::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgEventDeptUsr::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDeptUsr.ver)
  return ver_;
}
inline void XmsgImOrgEventDeptUsr::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgEventDeptUsr.ver)
}

// uint64 gts = 7;
inline void XmsgImOrgEventDeptUsr::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgEventDeptUsr::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDeptUsr.gts)
  return gts_;
}
inline void XmsgImOrgEventDeptUsr::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgEventDeptUsr.gts)
}

// uint64 uts = 8;
inline void XmsgImOrgEventDeptUsr::clear_uts() {
  uts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgEventDeptUsr::uts() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventDeptUsr.uts)
  return uts_;
}
inline void XmsgImOrgEventDeptUsr::set_uts(::google::protobuf::uint64 value) {
  
  uts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgEventDeptUsr.uts)
}

// -------------------------------------------------------------------

// XmsgImOrgEventUsr

// string cgt = 1;
inline void XmsgImOrgEventUsr::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgEventUsr::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventUsr.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImOrgEventUsr::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgEventUsr.cgt)
}
#if LANG_CXX11
inline void XmsgImOrgEventUsr::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgEventUsr.cgt)
}
#endif
inline void XmsgImOrgEventUsr::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgEventUsr.cgt)
}
inline void XmsgImOrgEventUsr::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgEventUsr.cgt)
}
inline ::std::string* XmsgImOrgEventUsr::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgEventUsr.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgEventUsr::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImOrgEventUsr.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgEventUsr::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgEventUsr.cgt)
}

// string name = 2;
inline void XmsgImOrgEventUsr::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgEventUsr::name() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventUsr.name)
  return name_.GetNoArena();
}
inline void XmsgImOrgEventUsr::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgEventUsr.name)
}
#if LANG_CXX11
inline void XmsgImOrgEventUsr::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgEventUsr.name)
}
#endif
inline void XmsgImOrgEventUsr::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgEventUsr.name)
}
inline void XmsgImOrgEventUsr::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgEventUsr.name)
}
inline ::std::string* XmsgImOrgEventUsr::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgEventUsr.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgEventUsr::release_name() {
  // @@protoc_insertion_point(field_release:XmsgImOrgEventUsr.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgEventUsr::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgEventUsr.name)
}

// bool enable = 3;
inline void XmsgImOrgEventUsr::clear_enable() {
  enable_ = false;
}
inline bool XmsgImOrgEventUsr::enable() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventUsr.enable)
  return enable_;
}
inline void XmsgImOrgEventUsr::set_enable(bool value) {
  
  enable_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgEventUsr.enable)
}

// .XmsgImOrgNodeInfo info = 4;
inline bool XmsgImOrgEventUsr::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void XmsgImOrgEventUsr::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
inline const ::XmsgImOrgNodeInfo& XmsgImOrgEventUsr::info() const {
  const ::XmsgImOrgNodeInfo* p = info_;
  // @@protoc_insertion_point(field_get:XmsgImOrgEventUsr.info)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImOrgNodeInfo*>(
      &::_XmsgImOrgNodeInfo_default_instance_);
}
inline ::XmsgImOrgNodeInfo* XmsgImOrgEventUsr::release_info() {
  // @@protoc_insertion_point(field_release:XmsgImOrgEventUsr.info)
  
  ::XmsgImOrgNodeInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::XmsgImOrgNodeInfo* XmsgImOrgEventUsr::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::XmsgImOrgNodeInfo;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImOrgEventUsr.info)
  return info_;
}
inline void XmsgImOrgEventUsr::set_allocated_info(::XmsgImOrgNodeInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgEventUsr.info)
}

// uint64 ver = 5;
inline void XmsgImOrgEventUsr::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgEventUsr::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventUsr.ver)
  return ver_;
}
inline void XmsgImOrgEventUsr::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgEventUsr.ver)
}

// uint64 gts = 6;
inline void XmsgImOrgEventUsr::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgEventUsr::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventUsr.gts)
  return gts_;
}
inline void XmsgImOrgEventUsr::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgEventUsr.gts)
}

// uint64 uts = 7;
inline void XmsgImOrgEventUsr::clear_uts() {
  uts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgEventUsr::uts() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgEventUsr.uts)
  return uts_;
}
inline void XmsgImOrgEventUsr::set_uts(::google::protobuf::uint64 value) {
  
  uts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgEventUsr.uts)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImOrgNodeInfo

// map<string, string> kv = 1;
inline int XmsgImOrgNodeInfo::kv_size() const {
  return kv_.size();
}
inline void XmsgImOrgNodeInfo::clear_kv() {
  kv_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImOrgNodeInfo::kv() const {
  // @@protoc_insertion_point(field_map:XmsgImOrgNodeInfo.kv)
  return kv_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImOrgNodeInfo::mutable_kv() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImOrgNodeInfo.kv)
  return kv_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImOrgNodeChild

// string cgt = 1;
inline void XmsgImOrgNodeChild::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgNodeChild::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeChild.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImOrgNodeChild::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeChild.cgt)
}
#if LANG_CXX11
inline void XmsgImOrgNodeChild::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgNodeChild.cgt)
}
#endif
inline void XmsgImOrgNodeChild::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgNodeChild.cgt)
}
inline void XmsgImOrgNodeChild::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgNodeChild.cgt)
}
inline ::std::string* XmsgImOrgNodeChild::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgNodeChild.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgNodeChild::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImOrgNodeChild.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgNodeChild::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgNodeChild.cgt)
}

// string name = 2;
inline void XmsgImOrgNodeChild::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImOrgNodeChild::name() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeChild.name)
  return name_.GetNoArena();
}
inline void XmsgImOrgNodeChild::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeChild.name)
}
#if LANG_CXX11
inline void XmsgImOrgNodeChild::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImOrgNodeChild.name)
}
#endif
inline void XmsgImOrgNodeChild::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImOrgNodeChild.name)
}
inline void XmsgImOrgNodeChild::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImOrgNodeChild.name)
}
inline ::std::string* XmsgImOrgNodeChild::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImOrgNodeChild.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImOrgNodeChild::release_name() {
  // @@protoc_insertion_point(field_release:XmsgImOrgNodeChild.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImOrgNodeChild::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgNodeChild.name)
}

// bool enable = 3;
inline void XmsgImOrgNodeChild::clear_enable() {
  enable_ = false;
}
inline bool XmsgImOrgNodeChild::enable() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeChild.enable)
  return enable_;
}
inline void XmsgImOrgNodeChild::set_enable(bool value) {
  
  enable_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeChild.enable)
}

// .XmsgImOrgNodeType type = 4;
inline void XmsgImOrgNodeChild::clear_type() {
  type_ = 0;
}
inline ::XmsgImOrgNodeType XmsgImOrgNodeChild::type() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeChild.type)
  return static_cast< ::XmsgImOrgNodeType >(type_);
}
inline void XmsgImOrgNodeChild::set_type(::XmsgImOrgNodeType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeChild.type)
}

// .XmsgImOrgNodeInfo info = 5;
inline bool XmsgImOrgNodeChild::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void XmsgImOrgNodeChild::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
inline const ::XmsgImOrgNodeInfo& XmsgImOrgNodeChild::info() const {
  const ::XmsgImOrgNodeInfo* p = info_;
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeChild.info)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImOrgNodeInfo*>(
      &::_XmsgImOrgNodeInfo_default_instance_);
}
inline ::XmsgImOrgNodeInfo* XmsgImOrgNodeChild::release_info() {
  // @@protoc_insertion_point(field_release:XmsgImOrgNodeChild.info)
  
  ::XmsgImOrgNodeInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::XmsgImOrgNodeInfo* XmsgImOrgNodeChild::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::XmsgImOrgNodeInfo;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImOrgNodeChild.info)
  return info_;
}
inline void XmsgImOrgNodeChild::set_allocated_info(::XmsgImOrgNodeInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:XmsgImOrgNodeChild.info)
}

// uint64 ver = 6;
inline void XmsgImOrgNodeChild::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgNodeChild::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeChild.ver)
  return ver_;
}
inline void XmsgImOrgNodeChild::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeChild.ver)
}

// uint64 gts = 7;
inline void XmsgImOrgNodeChild::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgNodeChild::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeChild.gts)
  return gts_;
}
inline void XmsgImOrgNodeChild::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeChild.gts)
}

// uint64 uts = 8;
inline void XmsgImOrgNodeChild::clear_uts() {
  uts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImOrgNodeChild::uts() const {
  // @@protoc_insertion_point(field_get:XmsgImOrgNodeChild.uts)
  return uts_;
}
inline void XmsgImOrgNodeChild::set_uts(::google::protobuf::uint64 value) {
  
  uts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImOrgNodeChild.uts)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::XmsgImOrgNodeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::XmsgImOrgNodeType>() {
  return ::XmsgImOrgNodeType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2dx_2dmsg_2dim_2dorg_2eproto__INCLUDED
